{"version":3,"file":"806.main.js","mappings":"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","sources":["webpack://main/./lib/src/Input.js","webpack://main/./lib/src/elements/HTMLElement.js","webpack://main/./lib/src/elements/Snippets.js","webpack://main/./lib/src/elements/containers/menus/Menu.js","webpack://main/./lib/src/elements/containers/menus/MenuBar.js","webpack://main/./lib/src/elements/containers/menus/MenuButton.js","webpack://main/./lib/src/elements/containers/menus/MenuItem.js","webpack://main/./lib/src/elements/containers/menus/MenuItemGroup.js","webpack://main/./lib/src/elements/containers/panels/Panel.js","webpack://main/./lib/src/elements/containers/panels/PanelGroup.js","webpack://main/./lib/src/elements/containers/status/StatusBar.js","webpack://main/./lib/src/elements/containers/status/StatusItem.js","webpack://main/./lib/src/elements/containers/tabs/TabPanel.js","webpack://main/./lib/src/elements/containers/tabs/Tab.js","webpack://main/./lib/src/elements/containers/tabs/TabList.js","webpack://main/./lib/src/elements/containers/trees/TreeItem.js","webpack://main/./lib/src/elements/containers/trees/Tree.js","webpack://main/./lib/src/elements/controls/breadcrumb/BreadcrumbItem.js","webpack://main/./lib/src/elements/controls/breadcrumb/BreadcrumbTrail.js","webpack://main/./lib/src/elements/controls/draggable/Draggable.js","webpack://main/./lib/src/elements/controls/draggable/Dragzone.js","webpack://main/./lib/src/elements/controls/draggable/Dropzone.js","webpack://main/./lib/src/elements/controls/draggable/DropzoneInput.js","webpack://main/./lib/src/elements/utils/HeightSash.js","webpack://main/./lib/src/elements/utils/Import.js","webpack://main/./lib/src/elements/utils/Loader.js","webpack://main/./lib/src/elements/utils/Palette.js","webpack://main/./lib/src/elements/utils/WidthSash.js","webpack://main/./sample/formdata.ts","webpack://main/./lib/src/elements/forms/Snippets.js"],"sourcesContent":["export { Key };\r\nexport { KeyModifier };\r\nexport { HotKey };\r\nexport { MouseButton };\r\nvar Key;\r\n(function (Key) {\r\n    Key[\"A\"] = \"a\";\r\n    Key[\"B\"] = \"b\";\r\n    Key[\"C\"] = \"c\";\r\n    Key[\"D\"] = \"d\";\r\n    Key[\"E\"] = \"e\";\r\n    Key[\"F\"] = \"f\";\r\n    Key[\"G\"] = \"g\";\r\n    Key[\"H\"] = \"h\";\r\n    Key[\"I\"] = \"i\";\r\n    Key[\"J\"] = \"j\";\r\n    Key[\"K\"] = \"k\";\r\n    Key[\"L\"] = \"l\";\r\n    Key[\"M\"] = \"m\";\r\n    Key[\"O\"] = \"o\";\r\n    Key[\"P\"] = \"p\";\r\n    Key[\"Q\"] = \"q\";\r\n    Key[\"R\"] = \"r\";\r\n    Key[\"S\"] = \"s\";\r\n    Key[\"T\"] = \"t\";\r\n    Key[\"U\"] = \"u\";\r\n    Key[\"V\"] = \"v\";\r\n    Key[\"W\"] = \"w\";\r\n    Key[\"X\"] = \"x\";\r\n    Key[\"Y\"] = \"y\";\r\n    Key[\"Z\"] = \"z\";\r\n    Key[\"ENTER\"] = \"Enter\";\r\n    Key[\"BACKSPACE\"] = \"Backspace\";\r\n    Key[\"ARROW_DOWN\"] = \"ArrowDown\";\r\n    Key[\"ARROW_LEFT\"] = \"ArrowLeft\";\r\n    Key[\"ARROW_RIGHT\"] = \"ArrowRight\";\r\n    Key[\"ARROW_UP\"] = \"ArrowUp\";\r\n    Key[\"SHIFT\"] = \"Shift\";\r\n})(Key || (Key = {}));\r\nvar KeyModifier;\r\n(function (KeyModifier) {\r\n    KeyModifier[\"Alt\"] = \"Alt\";\r\n    KeyModifier[\"Control\"] = \"Control\";\r\n    KeyModifier[\"Shift\"] = \"Shift\";\r\n})(KeyModifier || (KeyModifier = {}));\r\nfunction displayKeyModifier(mode) {\r\n    switch (mode) {\r\n        case KeyModifier.Control:\r\n            return \"Ctrl\";\r\n        default:\r\n            return mode;\r\n    }\r\n}\r\nvar MouseButton;\r\n(function (MouseButton) {\r\n    MouseButton[MouseButton[\"LEFT\"] = 1] = \"LEFT\";\r\n    MouseButton[MouseButton[\"WHEEL\"] = 2] = \"WHEEL\";\r\n    MouseButton[MouseButton[\"RIGHT\"] = 3] = \"RIGHT\";\r\n    MouseButton[MouseButton[\"FORWARD\"] = 4] = \"FORWARD\";\r\n    MouseButton[MouseButton[\"BACK\"] = 5] = \"BACK\";\r\n})(MouseButton || (MouseButton = {}));\r\nconst testKeyModifier = (mod, event) => {\r\n    switch (mod) {\r\n        case 'Alt':\r\n            return event.altKey;\r\n        case 'Control':\r\n            return event.ctrlKey;\r\n        case 'Shift':\r\n            return event.shiftKey;\r\n        default:\r\n            return () => true;\r\n    }\r\n};\r\nclass HotKey {\r\n    constructor(key, mod1, mod2) {\r\n        this.key = key;\r\n        this.mod1 = mod1;\r\n        this.mod2 = mod2;\r\n    }\r\n    toString() {\r\n        return `${this.mod1 ? `${displayKeyModifier(this.mod1)}+` : ''}${this.mod2 ? `${displayKeyModifier(this.mod2)}+` : ''}${(this.key.length === 1) ? this.key.toUpperCase() : this.key}`;\r\n    }\r\n    test(event) {\r\n        return ((!this.mod1 || testKeyModifier(this.mod1, event)) && (!this.mod2 || testKeyModifier(this.mod2, event)) && event.key === this.key);\r\n    }\r\n}\r\n//# sourceMappingURL=Input.js.map","import { forAllSubtreeElements } from \"./Snippets\";\r\nexport { isTagElement };\r\nexport { RegisterCustomHTMLElement };\r\nexport { GenerateAttributeAccessors };\r\nexport { createTemplate };\r\nexport { bindShadowRoot };\r\nexport { setElementProperties };\r\nexport { setElementAttributes };\r\nexport { setElementChildren };\r\nexport { HTMLElementConstructor };\r\nexport { isParentNode };\r\nexport { isReactiveNode };\r\nexport { isReactiveParentNode };\r\nexport { ReactiveNode };\r\nexport { ReactiveChildNodes };\r\nexport { isElement };\r\nexport { Element };\r\nexport { areAttributesMatching };\r\nexport { AttributeMutationMixinBase };\r\nexport { createMutationObserverCallback };\r\nexport { Fragment };\r\nexport { setHTMLElementEventListeners };\r\nexport { parseStringTemplate };\r\nfunction isTagElement(tagName, obj) {\r\n    return obj instanceof Node && obj.nodeType === obj.ELEMENT_NODE && obj.tagName.toLowerCase() == tagName;\r\n}\r\nfunction parseStringTemplate(template, items) {\r\n    const regexp = /\\[(.*?)\\]/gm;\r\n    const itemsKeys = Object.keys(items);\r\n    let result;\r\n    let resultNodes = [];\r\n    let lastResultIndex = 0;\r\n    while ((result = regexp.exec(template)) !== null) {\r\n        if (result.index >= lastResultIndex) {\r\n            resultNodes.push(template.substring(lastResultIndex, result.index));\r\n        }\r\n        if (itemsKeys.indexOf(result[1]) > -1) {\r\n            resultNodes.push(items[result[1]]);\r\n        }\r\n        lastResultIndex = result.index + result[0].length;\r\n    }\r\n    let fragment = new DocumentFragment();\r\n    fragment.append(...resultNodes, template.substring(lastResultIndex, template.length));\r\n    return fragment;\r\n}\r\n/*\r\nfunction fragment(parts: TemplateStringsArray, ...slots: (Node | string)[]): DocumentFragment {\r\n    let timestamp = new Date().getTime();\r\n    let html = parts.reduce((html, part, index) => {\r\n        return `${html}${part}${(index < slots.length) ? `<div id=\"${timestamp}-${index}\"></div>` : \"\"}`;\r\n    }, \"\");\r\n    let parser = new DOMParser();\r\n    let fragment = new DocumentFragment();\r\n    fragment.append(...parser.parseFromString(html, \"text/html\").body.children);\r\n    slots.forEach((slot, index) => {\r\n        let placeholder = fragment.getElementById(`${timestamp}-${index}`);\r\n        if (placeholder) {\r\n            if (slot instanceof Node) {\r\n                placeholder.replaceWith(slot);\r\n            }\r\n            else {\r\n                placeholder.replaceWith(document.createTextNode(slot));\r\n            }\r\n        }\r\n    });\r\n    return fragment;\r\n}\r\n*/\r\nconst RegisterCustomHTMLElement = function (args) {\r\n    return (elementCtor) => {\r\n        const { name, observedAttributes, options } = args;\r\n        if (observedAttributes) {\r\n            Object.defineProperty(elementCtor.prototype.constructor, 'observedAttributes', {\r\n                get: () => {\r\n                    return observedAttributes;\r\n                }\r\n            });\r\n        }\r\n        if (!customElements.get(name)) {\r\n            customElements.define(name, elementCtor, options);\r\n        }\r\n        return elementCtor;\r\n    };\r\n};\r\nconst GenerateAttributeAccessors = function (attributes) {\r\n    return (elementCtor) => {\r\n        attributes.forEach((attr) => {\r\n            const { name, type } = attr;\r\n            switch (type) {\r\n                case \"boolean\":\r\n                    Object.defineProperty(elementCtor.prototype, name, {\r\n                        get: function () {\r\n                            const val = this.getAttribute(name);\r\n                            return (val === \"\" || false);\r\n                        },\r\n                        set: function (value) {\r\n                            if (value) {\r\n                                this.setAttribute(name, \"\");\r\n                            }\r\n                            else {\r\n                                this.removeAttribute(name);\r\n                            }\r\n                        }\r\n                    });\r\n                    break;\r\n                case \"json\":\r\n                    Object.defineProperty(elementCtor.prototype, name, {\r\n                        get: function () {\r\n                            const val = this.getAttribute(name);\r\n                            return (val !== null) ? JSON.parse(val) : null;\r\n                        },\r\n                        set: function (value) {\r\n                            if (value !== null) {\r\n                                this.setAttribute(name, JSON.stringify(value));\r\n                            }\r\n                            else {\r\n                                this.removeAttribute(name);\r\n                            }\r\n                        }\r\n                    });\r\n                    break;\r\n                case \"number\":\r\n                    Object.defineProperty(elementCtor.prototype, name, {\r\n                        get: function () {\r\n                            const val = this.getAttribute(name);\r\n                            return (val !== null) ? parseFloat(val) : val;\r\n                        },\r\n                        set: function (value) {\r\n                            if (value) {\r\n                                this.setAttribute(name, value);\r\n                            }\r\n                            else {\r\n                                this.removeAttribute(name);\r\n                            }\r\n                        }\r\n                    });\r\n                    break;\r\n                case \"string\":\r\n                default:\r\n                    Object.defineProperty(elementCtor.prototype, name, {\r\n                        get: function () {\r\n                            const val = this.getAttribute(name);\r\n                            return val;\r\n                        },\r\n                        set: function (value) {\r\n                            if (value) {\r\n                                this.setAttribute(name, value);\r\n                            }\r\n                            else {\r\n                                this.removeAttribute(name);\r\n                            }\r\n                        }\r\n                    });\r\n                    break;\r\n            }\r\n        });\r\n        return elementCtor;\r\n    };\r\n};\r\nfunction createTemplate(templateContent) {\r\n    const template = document.createElement(\"template\");\r\n    if (typeof templateContent !== \"undefined\") {\r\n        template.innerHTML = templateContent;\r\n    }\r\n    return template.content;\r\n}\r\nfunction bindShadowRoot(element, templateContent) {\r\n    const root = element.attachShadow({ mode: \"open\" });\r\n    const template = document.createElement(\"template\");\r\n    if (typeof templateContent !== \"undefined\") {\r\n        template.innerHTML = templateContent;\r\n    }\r\n    root.appendChild(template.content.cloneNode(true));\r\n    return root;\r\n}\r\nfunction HTMLFragment(content) {\r\n    let template = document.createElement(\"template\");\r\n    template.innerHTML = content;\r\n    return template.content;\r\n}\r\nfunction Fragment(...nodes) {\r\n    let fragment = new DocumentFragment();\r\n    fragment.append(...nodes);\r\n    return fragment;\r\n}\r\nfunction HTMLElementConstructor(tagName, init) {\r\n    const element = document.createElement(tagName, init === null || init === void 0 ? void 0 : init.options);\r\n    if (init) {\r\n        if (init.props) {\r\n            setElementProperties(element, init.props);\r\n        }\r\n        if (init.attrs) {\r\n            setElementAttributes(element, init.attrs);\r\n        }\r\n        if (init.children) {\r\n            setElementChildren(element, init.children);\r\n        }\r\n        if (init.listeners) {\r\n            setHTMLElementEventListeners(element, init.listeners);\r\n        }\r\n    }\r\n    return element;\r\n}\r\n;\r\nfunction Element(tagName, init) {\r\n    const element = document.createElement(tagName, init === null || init === void 0 ? void 0 : init.options);\r\n    if (init) {\r\n        if (init.props) {\r\n            setElementProperties(element, init.props);\r\n        }\r\n        if (init.attrs) {\r\n            setElementAttributes(element, init.attrs);\r\n        }\r\n        if (init.children) {\r\n            if (typeof init.children === \"function\") {\r\n                setElementChildren(element, init.children(element));\r\n            }\r\n            else {\r\n                setElementChildren(element, init.children);\r\n            }\r\n        }\r\n        if (init.listeners) {\r\n            setHTMLElementEventListeners(element, init.listeners);\r\n        }\r\n        if (init.styles) {\r\n            setHTMLElementStyles(element, init.styles);\r\n        }\r\n    }\r\n    return element;\r\n}\r\nfunction isParentNode(node) {\r\n    return node.hasChildNodes();\r\n}\r\nfunction isElement(node) {\r\n    return node.nodeType === node.ELEMENT_NODE;\r\n}\r\nfunction isReactiveNode(node) {\r\n    let testNode = node;\r\n    return (typeof testNode._reactAttributes !== \"undefined\") && testNode._reactAttributes._reactEvent === \"objectmodelchange\";\r\n}\r\nfunction isReactiveParentNode(node) {\r\n    let testNode = node;\r\n    return (isParentNode(node) && typeof testNode._reactAttributes !== \"undefined\") && testNode._reactAttributes._reactEvent === \"listmodelchange\";\r\n}\r\nfunction ReactiveNode(node, object, react) {\r\n    Object.assign(node, {\r\n        _reactAttributes: {\r\n            _reactModel: object,\r\n            _reactEvent: \"objectmodelchange\",\r\n            _reactListener: (event) => {\r\n                react(node, event.data.property, event.data.oldValue, event.data.newValue);\r\n            }\r\n        }\r\n    });\r\n    const keys = Object.keys(object.data);\r\n    keys.forEach((key) => {\r\n        react(node, key, void 0, object.data[key]);\r\n    });\r\n    return node;\r\n}\r\nfunction ReactiveChildNodes(list, map) {\r\n    return (parent) => {\r\n        Object.assign(parent, {\r\n            _reactAttributes: {\r\n                _reactModel: list,\r\n                _reactEvent: \"listmodelchange\",\r\n                _reactListener: (event) => {\r\n                    //TODO: Create a direct map between model items and child nodes to get rid of index\r\n                    if (event.data.removedItems.length) {\r\n                        for (let i = 0; i < event.data.removedItems.length; i++) {\r\n                            parent.children.item(event.data.index).remove();\r\n                        }\r\n                    }\r\n                    if (event.data.addedItems.length) {\r\n                        let addedElements = event.data.addedItems.map(item => map(item));\r\n                        if (event.data.index >= list.items.length) {\r\n                            parent.append(...addedElements);\r\n                        }\r\n                        else {\r\n                            parent.children.item(event.data.index - event.data.removedItems.length).before(...addedElements);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return list.items.map(map);\r\n    };\r\n}\r\nfunction setHTMLElementEventListeners(element, listeners) {\r\n    Object.entries(listeners).forEach((entry) => {\r\n        if (Array.isArray(entry[1])) {\r\n            element.addEventListener(entry[0], entry[1][0], entry[1][1]);\r\n        }\r\n        else {\r\n            element.addEventListener(entry[0], entry[1]);\r\n        }\r\n    });\r\n    return element;\r\n}\r\n;\r\nfunction setHTMLElementStyles(element, styles) {\r\n    Object.keys(styles).forEach((property) => {\r\n        if (Array.isArray(styles[property])) {\r\n            element.style.setProperty(property, styles[property][0], styles[property][1]);\r\n        }\r\n        else {\r\n            element.style.setProperty(property, styles[property]);\r\n        }\r\n    });\r\n    return element;\r\n}\r\n;\r\nfunction setElementChildren(element, children) {\r\n    element.textContent = \"\";\r\n    element.append(...children);\r\n    return element;\r\n}\r\n;\r\nfunction setElementProperties(element, properties) {\r\n    for (const property in properties) {\r\n        let value = properties[property];\r\n        if (typeof value !== \"undefined\") {\r\n            element[property] = value;\r\n        }\r\n    }\r\n    return element;\r\n}\r\n;\r\nfunction setElementAttributes(element, attributes) {\r\n    for (const key in attributes) {\r\n        const value = attributes[key];\r\n        if (typeof value === \"boolean\") {\r\n            if (value) {\r\n                element.setAttribute(key, \"\");\r\n            }\r\n        }\r\n        else {\r\n            element.setAttribute(key, value.toString());\r\n        }\r\n    }\r\n    return element;\r\n}\r\n;\r\nfunction areAttributesMatching(refAttributeType, refAttrName, refAttrValue, attrName, attrValue) {\r\n    if (refAttrName == attrName) {\r\n        switch (refAttributeType) {\r\n            case \"boolean\":\r\n                return refAttrValue == \"\" && attrValue == \"\";\r\n            case \"string\":\r\n                return refAttrValue !== \"\" && (refAttrValue === attrValue);\r\n            case \"listitem\":\r\n                return (refAttrValue !== \"\" && attrValue !== null) && new RegExp(`${refAttrValue}\\s*?`, \"g\").test(attrValue);\r\n        }\r\n    }\r\n    return false;\r\n}\r\nclass AttributeMutationMixinBase {\r\n    constructor(attributeName, attributeType = \"boolean\", attributeValue = \"\") {\r\n        this.attributeName = attributeName;\r\n        this.attributeType = attributeType;\r\n        this.attributeValue = attributeValue;\r\n    }\r\n}\r\nfunction createMutationObserverCallback(mixins) {\r\n    return (mutationsList) => {\r\n        mutationsList.forEach((mutation) => {\r\n            mutation.addedNodes.forEach((node) => {\r\n                if (isElement(node)) {\r\n                    forAllSubtreeElements(node, (childElement) => {\r\n                        [...childElement.attributes].forEach((attr) => {\r\n                            let matchingMixins = mixins.filter(mixin => areAttributesMatching(mixin.attributeType, mixin.attributeName, mixin.attributeValue, attr.name, attr.value));\r\n                            matchingMixins.forEach((mixin) => {\r\n                                mixin.attach(childElement);\r\n                            });\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n            mutation.removedNodes.forEach((node) => {\r\n                if (isElement(node)) {\r\n                    forAllSubtreeElements(node, (childElement) => {\r\n                        [...childElement.attributes].forEach((attr) => {\r\n                            let matchingMixins = mixins.filter(mixin => areAttributesMatching(mixin.attributeType, mixin.attributeName, mixin.attributeValue, attr.name, attr.value));\r\n                            matchingMixins.forEach((mixin) => {\r\n                                mixin.detach(childElement);\r\n                            });\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n            if (isElement(mutation.target)) {\r\n                let targetElement = mutation.target;\r\n                let attrName = mutation.attributeName;\r\n                if (attrName) {\r\n                    let relatedMixins = mixins.filter(mixin => mixin.attributeName === attrName);\r\n                    relatedMixins.forEach((mixin) => {\r\n                        if (areAttributesMatching(mixin.attributeType, mixin.attributeName, mixin.attributeValue, attrName, targetElement.getAttribute(attrName))) {\r\n                            mixin.attach(targetElement);\r\n                        }\r\n                        else {\r\n                            mixin.detach(targetElement);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=HTMLElement.js.map","export { forAllSubtreeElements };\r\nexport { forAllSubtreeNodes };\r\nexport { getPropertyFromPath };\r\nexport { setPropertyFromPath };\r\nexport { pointIntersectsWithDOMRect };\r\nfunction forAllSubtreeElements(element, func) {\r\n    let index = 0;\r\n    func(element);\r\n    while (index < element.children.length) {\r\n        let child = element.children.item(index);\r\n        if (child) {\r\n            forAllSubtreeElements(child, func);\r\n        }\r\n        index++;\r\n    }\r\n}\r\nfunction forAllSubtreeNodes(parent, func) {\r\n    let index = 0;\r\n    while (index < parent.childNodes.length) {\r\n        let child = parent.childNodes.item(index);\r\n        if (child) {\r\n            func(child, parent);\r\n            if (child.hasChildNodes()) {\r\n                forAllSubtreeNodes(child, func);\r\n            }\r\n        }\r\n        index++;\r\n    }\r\n}\r\nfunction getPropertyFromPath(src, path) {\r\n    const props = path.split(\".\");\r\n    let obj = src;\r\n    props.forEach((prop) => {\r\n        if (prop.includes(\"[\")) {\r\n            let index = parseInt(prop.substring(prop.indexOf(\"[\") + 1, prop.indexOf(\"]\")));\r\n            if (Number.isNaN(index)) {\r\n                console.error(`Wrong indexed path: ${prop}`);\r\n            }\r\n            prop = prop.substring(0, prop.indexOf(\"[\"));\r\n            if (typeof obj === \"object\" && prop in obj && Array.isArray(obj[prop])) {\r\n                obj = obj[prop][index];\r\n            }\r\n        }\r\n        else if (typeof obj === \"object\" && prop in obj) {\r\n            obj = obj[prop];\r\n        }\r\n        else {\r\n            obj = void 0;\r\n        }\r\n    });\r\n    return obj;\r\n}\r\nfunction setPropertyFromPath(src, path, value) {\r\n    const props = path.split(\".\");\r\n    let obj = src;\r\n    let lastPropIdx = props.length - 1;\r\n    if (src === null) {\r\n        console.error(\"Source data can't be null\");\r\n    }\r\n    props.forEach((prop, idx) => {\r\n        if (prop.includes(\"[\")) {\r\n            let index = parseInt(prop.substring(prop.indexOf(\"[\") + 1, prop.indexOf(\"]\")));\r\n            if (Number.isNaN(index)) {\r\n                console.error(`Wrong indexed path: ${prop}`);\r\n            }\r\n            prop = prop.substring(0, prop.indexOf(\"[\"));\r\n            if (!Array.isArray(obj[prop])) {\r\n                obj[prop] = [];\r\n            }\r\n            if (idx === lastPropIdx) {\r\n                obj[prop][index] = value;\r\n            }\r\n            else {\r\n                if (typeof obj[prop][index] !== \"object\") {\r\n                    obj[prop][index] = {};\r\n                }\r\n                obj = obj[prop][index];\r\n            }\r\n        }\r\n        else {\r\n            if (typeof obj[prop] !== \"object\") {\r\n                obj[prop] = {};\r\n            }\r\n            if (idx === lastPropIdx) {\r\n                obj[prop] = value;\r\n            }\r\n            else {\r\n                obj = obj[prop];\r\n            }\r\n        }\r\n    });\r\n    return src;\r\n}\r\nfunction pointIntersectsWithDOMRect(x, y, rect) {\r\n    return !(rect.left > x ||\r\n        rect.right < x ||\r\n        rect.top > y ||\r\n        rect.bottom < y);\r\n}\r\n//# sourceMappingURL=Snippets.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nimport { pointIntersectsWithDOMRect } from \"../../Snippets\";\r\nexport { HTMLEMenuElementBase };\r\nlet HTMLEMenuElementBase = class HTMLEMenuElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: inline-block;\r\n                    user-select: none;\r\n\r\n                    padding: 6px 0;\r\n                    background-color: white;\r\n                    cursor: initial;\r\n                    width: max-content;\r\n\r\n                    -webkit-box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 6px;\r\n                    -moz-box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 6px;\r\n                    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 6px;\r\n                }\r\n\r\n                [part~=\"container\"] {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                }\r\n\r\n                ::slotted(hr) {\r\n                    margin: 6px 0;\r\n                }\r\n            </style>\r\n            <div part=\"container\">\r\n                <slot></slot>\r\n            </div>\r\n        `);\r\n        this.parentItem = null;\r\n        this.items = [];\r\n        this._activeIndex = -1;\r\n        this._style = null;\r\n    }\r\n    get activeIndex() {\r\n        return this._activeIndex;\r\n    }\r\n    get activeItem() {\r\n        return this.items[this.activeIndex] || null;\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        this._style = window.getComputedStyle(this);\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                const items = slot.assignedElements().filter(elem => isTagElement(\"e-menuitem\", elem) || isTagElement(\"e-menuitemgroup\", elem));\r\n                this.items = items;\r\n                items.forEach((item) => {\r\n                    item.parentMenu = this;\r\n                });\r\n            });\r\n        }\r\n        this.addEventListener(\"mousedown\", (event) => {\r\n            let target = event.target;\r\n            if (isTagElement(\"e-menuitem\", target)) {\r\n                let thisIncludesTarget = this.items.includes(target);\r\n                if (thisIncludesTarget) {\r\n                    target.trigger();\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener(\"mouseover\", (event) => {\r\n            let target = event.target;\r\n            let targetIndex = this.items.indexOf(target);\r\n            if (this === target) {\r\n                this.reset();\r\n                this.focus();\r\n            }\r\n            else if (targetIndex >= 0) {\r\n                if (isTagElement(\"e-menuitem\", target)) {\r\n                    this.focusItemAt(targetIndex, true);\r\n                }\r\n                else {\r\n                    this._activeIndex = targetIndex;\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener(\"mouseout\", (event) => {\r\n            let target = event.target;\r\n            let thisIntersectsWithMouse = pointIntersectsWithDOMRect(event.clientX, event.clientY, this.getBoundingClientRect());\r\n            if ((this === target || this.items.includes(target)) && !thisIntersectsWithMouse) {\r\n                this.reset();\r\n                this.focus();\r\n            }\r\n        });\r\n        this.addEventListener(\"focusin\", (event) => {\r\n            let target = event.target;\r\n            this._activeIndex = this.items.findIndex((item) => item.contains(target));\r\n            this.expanded = true;\r\n        });\r\n        this.addEventListener(\"focusout\", (event) => {\r\n            let newTarget = event.relatedTarget;\r\n            if (!this.contains(newTarget)) {\r\n                this.reset();\r\n                this.expanded = false;\r\n            }\r\n        });\r\n        this.addEventListener(\"keydown\", (event) => {\r\n            switch (event.key) {\r\n                case \"ArrowUp\":\r\n                    this.focusItemAt((this.activeIndex <= 0) ? this.items.length - 1 : this.activeIndex - 1);\r\n                    if (isTagElement(\"e-menuitemgroup\", this.activeItem)) {\r\n                        this.activeItem.focusItemAt(this.activeItem.items.length - 1);\r\n                    }\r\n                    event.stopPropagation();\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    this.focusItemAt((this.activeIndex >= this.items.length - 1) ? 0 : this.activeIndex + 1);\r\n                    if (isTagElement(\"e-menuitemgroup\", this.activeItem)) {\r\n                        this.activeItem.focusItemAt(0);\r\n                    }\r\n                    event.stopPropagation();\r\n                    break;\r\n                case \"Home\":\r\n                    this.focusItemAt(0);\r\n                    if (isTagElement(\"e-menuitemgroup\", this.activeItem)) {\r\n                        this.activeItem.focusItemAt(0);\r\n                    }\r\n                    event.stopPropagation();\r\n                    break;\r\n                case \"End\":\r\n                    this.focusItemAt(this.items.length - 1);\r\n                    if (isTagElement(\"e-menuitemgroup\", this.activeItem)) {\r\n                        this.activeItem.focusItemAt(this.activeItem.items.length - 1);\r\n                    }\r\n                    event.stopPropagation();\r\n                    break;\r\n                case \"Enter\":\r\n                    if (isTagElement(\"e-menuitem\", this.activeItem)) {\r\n                        this.activeItem.trigger();\r\n                        event.stopPropagation();\r\n                    }\r\n                    break;\r\n                case \"Escape\":\r\n                    if (this.parentItem) {\r\n                        let parentGroup = this.parentItem.group;\r\n                        let parentMenu = parentGroup ? parentGroup.parentMenu : this.parentItem.parentMenu;\r\n                        if (isTagElement(\"e-menu\", parentMenu)) {\r\n                            if (parentGroup) {\r\n                                parentGroup.focusItemAt(parentGroup.activeIndex);\r\n                            }\r\n                            else {\r\n                                parentMenu.focusItemAt(parentMenu.activeIndex);\r\n                            }\r\n                            this.reset();\r\n                            event.stopPropagation();\r\n                        }\r\n                    }\r\n                    else {\r\n                        document.body.focus();\r\n                    }\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                    if (this.parentItem) {\r\n                        let parentGroup = this.parentItem.group;\r\n                        let parentMenu = parentGroup ? parentGroup.parentMenu : this.parentItem.parentMenu;\r\n                        if (isTagElement(\"e-menu\", parentMenu)) {\r\n                            if (parentGroup) {\r\n                                parentGroup.focusItemAt(parentGroup.activeIndex);\r\n                            }\r\n                            else {\r\n                                parentMenu.focusItemAt(parentMenu.activeIndex);\r\n                            }\r\n                            this.reset();\r\n                            event.stopPropagation();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    if (this.items.includes(event.target)) {\r\n                        if (isTagElement(\"e-menuitem\", this.activeItem) && this.activeItem.childMenu) {\r\n                            this.activeItem.childMenu.focusItemAt(0);\r\n                            event.stopPropagation();\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (newValue !== oldValue) {\r\n            switch (name) {\r\n                case \"expanded\":\r\n                    if (newValue !== null) {\r\n                        let thisRect = this.getBoundingClientRect();\r\n                        let thisIsOverflowing = thisRect.right > document.body.clientWidth;\r\n                        if (thisIsOverflowing) {\r\n                            this.overflowing = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.overflowing = false;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    focusItemAt(index, childMenu) {\r\n        let item = this.items[index];\r\n        if (item) {\r\n            this._activeIndex = index;\r\n            item.focus();\r\n            if (isTagElement(\"e-menuitem\", item)) {\r\n                if (childMenu && item.childMenu) {\r\n                    item.childMenu.focus();\r\n                }\r\n            }\r\n            else {\r\n                item.focusItemAt(0);\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        let item = this.activeItem;\r\n        this._activeIndex = -1;\r\n        if (isTagElement(\"e-menuitem\", item) && item.childMenu) {\r\n            item.childMenu.reset();\r\n        }\r\n    }\r\n    findItem(predicate, subitems) {\r\n        let foundItem = null;\r\n        for (let idx = 0; idx < this.items.length; idx++) {\r\n            let item = this.items[idx];\r\n            if (isTagElement(\"e-menuitem\", item)) {\r\n                if (predicate(item)) {\r\n                    return item;\r\n                }\r\n                if (subitems && item.childMenu) {\r\n                    foundItem = item.childMenu.findItem(predicate, subitems);\r\n                    if (foundItem) {\r\n                        return foundItem;\r\n                    }\r\n                }\r\n            }\r\n            else if (isTagElement(\"e-menuitemgroup\", item)) {\r\n                foundItem = item.findItem(predicate, subitems);\r\n                if (foundItem) {\r\n                    return foundItem;\r\n                }\r\n            }\r\n        }\r\n        return foundItem;\r\n    }\r\n};\r\nHTMLEMenuElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-menu\",\r\n        observedAttributes: [\"expanded\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"expanded\", type: \"boolean\" },\r\n        { name: \"overflowing\", type: \"boolean\" }\r\n    ])\r\n], HTMLEMenuElementBase);\r\n//# sourceMappingURL=Menu.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { HTMLEMenuBarElementBase };\r\nlet HTMLEMenuBarElementBase = class HTMLEMenuBarElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    position: relative;\r\n                    display: block;\r\n                    user-select: none;\r\n                }\r\n\r\n                :host(:not(:focus-within)) ::slotted(:hover) {\r\n                    color: black;\r\n                    background-color: gainsboro;\r\n                }\r\n\r\n                [part~=\"container\"] {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                }\r\n            </style>\r\n            <div part=\"container\">\r\n                <slot></slot>\r\n            </div>\r\n        `);\r\n        this.items = [];\r\n        this._activeIndex = -1;\r\n    }\r\n    get activeIndex() {\r\n        return this._activeIndex;\r\n    }\r\n    get activeItem() {\r\n        return this.items[this.activeIndex] || null;\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                const items = slot.assignedElements()\r\n                    .filter(item => isTagElement(\"e-menuitem\", item));\r\n                this.items = items;\r\n                items.forEach((item) => {\r\n                    item.parentMenu = this;\r\n                });\r\n            });\r\n        }\r\n        this.addEventListener(\"mouseover\", (event) => {\r\n            let targetIndex = this.items.indexOf(event.target);\r\n            if (targetIndex >= 0) {\r\n                if (this.contains(document.activeElement)) {\r\n                    if (this.active) {\r\n                        this.focusItemAt(targetIndex, true);\r\n                    }\r\n                    else {\r\n                        this._activeIndex = targetIndex;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener(\"keydown\", (event) => {\r\n            var _a, _b, _c;\r\n            switch (event.key) {\r\n                case \"ArrowLeft\":\r\n                    this.focusItemAt((this.activeIndex <= 0) ? this.items.length - 1 : this.activeIndex - 1);\r\n                    if (this.active && ((_a = this.activeItem) === null || _a === void 0 ? void 0 : _a.childMenu)) {\r\n                        this.activeItem.childMenu.focusItemAt(0);\r\n                    }\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    this.focusItemAt((this.activeIndex >= this.items.length - 1) ? 0 : this.activeIndex + 1);\r\n                    if (this.active && ((_b = this.activeItem) === null || _b === void 0 ? void 0 : _b.childMenu)) {\r\n                        this.activeItem.childMenu.focusItemAt(0);\r\n                    }\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    this.focusItemAt(this.activeIndex);\r\n                    if (this.active && ((_c = this.activeItem) === null || _c === void 0 ? void 0 : _c.childMenu)) {\r\n                        this.activeItem.childMenu.focusItemAt(0);\r\n                    }\r\n                    break;\r\n                case \"Enter\":\r\n                    this.active = true;\r\n                    if (this.activeItem) {\r\n                        this.activeItem.trigger();\r\n                    }\r\n                    break;\r\n                case \"Escape\":\r\n                    this.focusItemAt(this.activeIndex);\r\n                    this.active = false;\r\n                    break;\r\n            }\r\n        });\r\n        this.addEventListener(\"mousedown\", (event) => {\r\n            let targetIndex = this.items.indexOf(event.target);\r\n            if (targetIndex >= 0) {\r\n                if (!this.contains(document.activeElement)) {\r\n                    this.active = true;\r\n                    this.focusItemAt(targetIndex, true);\r\n                }\r\n                else {\r\n                    this.active = false;\r\n                    document.body.focus();\r\n                }\r\n                event.preventDefault();\r\n            }\r\n        });\r\n        this.addEventListener(\"focus\", () => {\r\n            this._activeIndex = 0;\r\n        });\r\n    }\r\n    focusItemAt(index, childMenu) {\r\n        let item = this.items[index];\r\n        if (item) {\r\n            this._activeIndex = index;\r\n            item.focus();\r\n            if (childMenu && item.childMenu) {\r\n                item.childMenu.focus();\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        let item = this.activeItem;\r\n        this._activeIndex = -1;\r\n        if (item === null || item === void 0 ? void 0 : item.childMenu) {\r\n            item.childMenu.reset();\r\n        }\r\n    }\r\n    findItem(predicate, subtree) {\r\n        let foundItem = null;\r\n        for (let idx = 0; idx < this.items.length; idx++) {\r\n            let item = this.items[idx];\r\n            if (predicate(item)) {\r\n                return item;\r\n            }\r\n            if (subtree && item.childMenu) {\r\n                foundItem = item.childMenu.findItem(predicate, subtree);\r\n                if (foundItem) {\r\n                    return foundItem;\r\n                }\r\n            }\r\n        }\r\n        return foundItem;\r\n    }\r\n};\r\nHTMLEMenuBarElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-menubar\"\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"active\", type: \"boolean\" },\r\n    ])\r\n], HTMLEMenuBarElementBase);\r\n//# sourceMappingURL=MenuBar.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { HTMLEMenuButtonElementBase };\r\nlet HTMLEMenuButtonElementBase = class HTMLEMenuButtonElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    position: relative;\r\n                    display: inline-block;\r\n\r\n                    user-select: none;\r\n                    white-space: nowrap;\r\n                    cursor: pointer;\r\n                    padding: 2px;\r\n                }\r\n\r\n                :host(:hover) {\r\n                    background-color: gainsboro;\r\n                }\r\n\r\n                :host(:focus-within:not(:focus)) {\r\n                    background-color: gainsboro;\r\n                }\r\n\r\n                :host([disabled]) {\r\n                    color: lightgray;\r\n                }\r\n\r\n                ::slotted([slot=\"menu\"]) {\r\n                    z-index: 1;\r\n                    position: absolute;\r\n                    color: initial;\r\n                }\r\n\r\n                ::slotted([slot=\"menu\"]) {\r\n                    top: 100%;\r\n                    left: 0;\r\n                }\r\n                \r\n                ::slotted([slot=\"menu\"][overflowing]) {\r\n                    right: 0;\r\n                    left: auto;\r\n                }\r\n\r\n                ::slotted([slot=\"menu\"]:not([expanded])) {\r\n                    opacity: 0;\r\n                    pointer-events: none !important;\r\n                }\r\n\r\n                [part~=\"toggle_arrow\"] {\r\n                    position: relative;\r\n                    display: inline-block;\r\n                    flex: auto;\r\n                    width: 18px;\r\n                    height: 18px;\r\n                }\r\n\r\n                [part~=\"toggle_arrow\"]::after {\r\n                    display: inline-block;\r\n                    text-align: center;\r\n                    width: 18px;\r\n                    position: absolute;\r\n                    content: \"▼\";\r\n                    color: dimgray;\r\n                }\r\n            </style>\r\n            <span part=\"toggle_arrow\"></span>\r\n            <slot name=\"menu\"></slot>\r\n        `);\r\n        this.childMenu = null;\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const menuSlot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot[name=menu]\");\r\n        if (menuSlot) {\r\n            menuSlot.addEventListener(\"slotchange\", () => {\r\n                const menuElem = menuSlot.assignedElements()[0];\r\n                if (isTagElement(\"e-menu\", menuElem)) {\r\n                    this.childMenu = menuElem;\r\n                }\r\n            });\r\n        }\r\n        this.addEventListener(\"keydown\", (event) => {\r\n            switch (event.key) {\r\n                case \"Enter\":\r\n                    if (!this.active) {\r\n                        this.active = true;\r\n                        if (this.childMenu) {\r\n                            this.childMenu.focusItemAt(0);\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"Escape\":\r\n                    this.focus();\r\n                    this.active = false;\r\n                    break;\r\n            }\r\n        });\r\n        this.addEventListener(\"click\", (event) => {\r\n            let target = event.target;\r\n            if (this.childMenu && !this.childMenu.contains(target)) {\r\n                this.toggle();\r\n            }\r\n        });\r\n        this.addEventListener(\"blur\", (event) => {\r\n            let containsNewFocus = (event.relatedTarget !== null) && this.contains(event.relatedTarget);\r\n            if (!containsNewFocus) {\r\n                this.active = false;\r\n            }\r\n        }, { capture: true });\r\n    }\r\n    toggle() {\r\n        if (!this.active) {\r\n            this.active = true;\r\n            if (this.childMenu) {\r\n                this.childMenu.focusItemAt(0);\r\n            }\r\n        }\r\n        else {\r\n            this.active = false;\r\n        }\r\n    }\r\n    trigger() {\r\n        alert();\r\n        if (!this.disabled) {\r\n            this.dispatchEvent(new CustomEvent(\"trigger\", { bubbles: true }));\r\n        }\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        var _a;\r\n        if (newValue !== oldValue) {\r\n            switch (name) {\r\n                case \"label\":\r\n                    if (oldValue !== newValue) {\r\n                        const labelPart = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"[part~=label]\");\r\n                        if (labelPart) {\r\n                            labelPart.textContent = newValue;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};\r\nHTMLEMenuButtonElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-menubutton\",\r\n        observedAttributes: [\"icon\", \"label\", \"checked\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"active\", type: \"boolean\" },\r\n        { name: \"label\", type: \"string\" },\r\n        { name: \"disabled\", type: \"boolean\" },\r\n    ])\r\n], HTMLEMenuButtonElementBase);\r\n//# sourceMappingURL=MenuButton.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { HTMLEMenuItemElementBase };\r\nlet HTMLEMenuItemElementBase = class HTMLEMenuItemElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: inline-block;\r\n\r\n                    user-select: none;\r\n                    white-space: nowrap;\r\n\r\n                    padding: 2px 6px;\r\n                    cursor: pointer;\r\n                }\r\n\r\n                :host([type=\"menu\"]),\r\n                :host([type=\"submenu\"]) {\r\n                    position: relative;\r\n                }\r\n\r\n                :host(:not([type=\"menu\"])) {\r\n                    padding-left: 12px;\r\n                    padding-right: 12px;\r\n                }\r\n\r\n                :host(:focus-within) {\r\n                    color: black;\r\n                    background-color: lightgray;\r\n                }\r\n\r\n                :host([disabled]) {\r\n                    color: dimgray;\r\n                }\r\n\r\n                :host([type=\"submenu\"]) ::slotted([slot=\"menu\"]),\r\n                :host([type=\"menu\"]) ::slotted([slot=\"menu\"]) {\r\n                    z-index: 1;\r\n                    position: absolute;\r\n                    color: initial;\r\n                }\r\n\r\n                :host([type=\"menu\"]) ::slotted([slot=\"menu\"]) {\r\n                    top: 100%;\r\n                    left: 0;\r\n                }\r\n                \r\n                :host([type=\"submenu\"]) ::slotted([slot=\"menu\"]) {\r\n                    left: 100%;\r\n                    top: -6px;\r\n                }\r\n                \r\n                :host([type=\"submenu\"]) ::slotted([slot=\"menu\"][overflowing]) {\r\n                    right: 100%;\r\n                    left: auto;\r\n                }\r\n                \r\n                :host([type=\"menu\"]) ::slotted([slot=\"menu\"][overflowing]) {\r\n                    right: 0;\r\n                    left: auto;\r\n                }\r\n\r\n                :host([type=\"menu\"]) ::slotted([slot=\"menu\"]:not([expanded])),\r\n                :host([type=\"submenu\"]) ::slotted([slot=\"menu\"]:not([expanded])) {\r\n                    opacity: 0;\r\n                    pointer-events: none !important;\r\n                }\r\n\r\n                [part~=\"content\"] {\r\n                    flex: auto;\r\n                    display: flex;\r\n                    overflow: hidden;\r\n                    pointer-events: none;\r\n                }\r\n\r\n                [part~=\"input\"] {\r\n                    display: inline-block;\r\n                    flex: none;\r\n                    width: 16px;\r\n                    height: 16px;\r\n                    margin: 2px;\r\n                }\r\n\r\n                [part~=\"label\"] {\r\n                    flex: auto;\r\n                    text-align: left;\r\n                }\r\n\r\n                [part~=\"hotkey\"] {\r\n                    flex: none;\r\n                    text-align: right;\r\n                    margin-left: 16px;\r\n                }\r\n\r\n                [part~=\"hotkey\"]:empty {\r\n                    display: none !important;\r\n                }\r\n\r\n                [part~=\"arrow\"] {\r\n                    display: inline-block;\r\n                    flex: none;\r\n                    margin: auto;\r\n                    color: inherit;\r\n                    text-align: center;\r\n                    font-weight: bold;\r\n                    width: 18px;\r\n                    height: 18px;\r\n                }\r\n\r\n                [part~=\"arrow\"]::after {\r\n                    display: inline-block;\r\n                    text-align: center;\r\n                    width: 18px;\r\n                    height: 18px;\r\n                    position: absolute;\r\n                    content: \"►\";\r\n                    color: dimgray;\r\n                }\r\n\r\n                :host([type=\"menu\"]) [part~=\"arrow\"],\r\n                :host([type=\"menu\"]) [part~=\"input\"] {\r\n                    display: none;\r\n                }\r\n\r\n                :host(:not([type=\"menu\"])) [part~=\"label\"] {\r\n                    padding-left: 10px;\r\n                    padding-right: 12px;\r\n                }\r\n                \r\n                :host(:not([type=\"checkbox\"]):not([type=\"radio\"])) [part~=\"input\"] {\r\n                    visibility: hidden;\r\n                    pointer-events: none;\r\n                }\r\n                \r\n                :host(:not([type=\"submenu\"])) [part~=\"arrow\"] {\r\n                    visibility: hidden;\r\n                    pointer-events: none;\r\n                }\r\n            </style>\r\n            <span part=\"content\">\r\n                <input part=\"input\" type=\"button\" tabindex=\"-1\"></input>\r\n                <span part=\"label\"></span>\r\n                <span part=\"hotkey\"></span>\r\n                <span part=\"arrow\"></span>\r\n            </span>\r\n            <slot name=\"menu\"></slot>\r\n        `);\r\n        this.childMenu = null;\r\n        this.parentMenu = null;\r\n        this.group = null;\r\n        this.command = null;\r\n        this._hotkey = null;\r\n    }\r\n    get hotkey() {\r\n        return this._hotkey;\r\n    }\r\n    set hotkey(hotkey) {\r\n        var _a;\r\n        this.dispatchEvent(new CustomEvent(\"e-hotkeychange\", {\r\n            bubbles: true,\r\n            detail: {\r\n                oldHotKey: this._hotkey,\r\n                newHotKey: hotkey\r\n            }\r\n        }));\r\n        this._hotkey = hotkey;\r\n        let hotkeyPart = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"[part~=hotkey]\");\r\n        if (hotkeyPart) {\r\n            hotkeyPart.textContent = hotkey ? hotkey.toString() : \"\";\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        this.setAttribute(\"aria-label\", this.label);\r\n        const menuSlot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot[name=menu]\");\r\n        if (menuSlot) {\r\n            menuSlot.addEventListener(\"slotchange\", () => {\r\n                const menuElem = menuSlot.assignedElements()[0];\r\n                if (isTagElement(\"e-menu\", menuElem)) {\r\n                    this.childMenu = menuElem;\r\n                    menuElem.parentItem = this;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        var _a, _b, _c;\r\n        if (newValue !== oldValue) {\r\n            switch (name) {\r\n                case \"label\":\r\n                    if (oldValue !== newValue) {\r\n                        const labelPart = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"[part~=label]\");\r\n                        if (labelPart) {\r\n                            labelPart.textContent = newValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"checked\":\r\n                    if (oldValue !== newValue) {\r\n                        const inputPart = (_b = this.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector(\"[part~=input]\");\r\n                        if (inputPart) {\r\n                            inputPart.checked = (newValue !== null);\r\n                            this.dispatchEvent(new CustomEvent(\"e-change\", { bubbles: true }));\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"type\":\r\n                    if (oldValue !== newValue) {\r\n                        const inputPart = (_c = this.shadowRoot) === null || _c === void 0 ? void 0 : _c.querySelector(\"[part~=input]\");\r\n                        if (inputPart) {\r\n                            switch (this.type) {\r\n                                case \"radio\":\r\n                                    inputPart.type = \"radio\";\r\n                                    break;\r\n                                case \"menu\":\r\n                                    inputPart.type = \"hidden\";\r\n                                    break;\r\n                                default:\r\n                                    inputPart.type = \"checkbox\";\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    trigger() {\r\n        if (!this.disabled) {\r\n            switch (this.type) {\r\n                case \"checkbox\":\r\n                    this.checked = !this.checked;\r\n                    break;\r\n                case \"radio\":\r\n                    this.dispatchEvent(new CustomEvent(\"radiochangerequest\", { bubbles: true }));\r\n                    break;\r\n                case \"menu\":\r\n                    if (this.childMenu) {\r\n                        this.childMenu.focusItemAt(0);\r\n                    }\r\n                    break;\r\n            }\r\n            this.dispatchEvent(new CustomEvent(\"trigger\", { bubbles: true }));\r\n        }\r\n    }\r\n};\r\nHTMLEMenuItemElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-menuitem\",\r\n        observedAttributes: [\"label\", \"checked\", \"type\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"label\", type: \"string\" },\r\n        { name: \"type\", type: \"string\" },\r\n        { name: \"disabled\", type: \"boolean\" },\r\n        { name: \"checked\", type: \"boolean\" },\r\n    ])\r\n], HTMLEMenuItemElementBase);\r\n//# sourceMappingURL=MenuItem.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { pointIntersectsWithDOMRect } from \"../../Snippets\";\r\nimport { bindShadowRoot, GenerateAttributeAccessors, isTagElement, RegisterCustomHTMLElement } from \"../../HTMLElement\";\r\nexport { HTMLEMenuItemGroupElementBase };\r\nlet HTMLEMenuItemGroupElementBase = class HTMLEMenuItemGroupElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: inline-block;\r\n                    user-select: none;\r\n                }\r\n                \r\n                :host(:not([label])) [part~=\"label\"] {\r\n                    display: none;\r\n                }\r\n\r\n                [part~=\"label\"] {\r\n                    white-space: nowrap;\r\n                    padding: 2px 6px 6px 6px;\r\n                    font-weight: bold;\r\n                }\r\n\r\n                [part~=\"container\"] {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                }\r\n\r\n                [part~=\"separator\"] {\r\n                    margin: 6px 0;\r\n                }\r\n\r\n                :host(:first-child) [part~=\"separator\"] {\r\n                    display: none;\r\n                }\r\n            </style>\r\n            <hr part=\"separator\"/>\r\n            <span part=\"label\"></span>\r\n            <div part=\"container\">\r\n                <slot></slot> \r\n            </div>\r\n        `);\r\n        this._activeIndex = -1;\r\n        this.parentMenu = null;\r\n        this.items = [];\r\n    }\r\n    get activeIndex() {\r\n        return this._activeIndex;\r\n    }\r\n    get activeItem() {\r\n        return this.items[this.activeIndex] || null;\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                const items = slot.assignedElements()\r\n                    .filter(item => isTagElement(\"e-menuitem\", item));\r\n                this.items = items;\r\n                items.forEach((item) => {\r\n                    item.group = this;\r\n                });\r\n            });\r\n        }\r\n        this.addEventListener(\"mousedown\", (event) => {\r\n            let target = event.target;\r\n            if (this.items.includes(target)) {\r\n                target.trigger();\r\n            }\r\n        });\r\n        this.addEventListener(\"mouseover\", (event) => {\r\n            let target = event.target;\r\n            let targetIndex = this.items.indexOf(target);\r\n            if (this === target) {\r\n                this.reset();\r\n                this.focus();\r\n            }\r\n            else if (targetIndex >= 0) {\r\n                this.focusItemAt(this.items.indexOf(target), true);\r\n            }\r\n        });\r\n        this.addEventListener(\"mouseout\", (event) => {\r\n            let target = event.target;\r\n            let thisIntersectsWithMouse = pointIntersectsWithDOMRect(event.clientX, event.clientY, this.getBoundingClientRect());\r\n            if ((this === target || this.items.includes(target)) && !thisIntersectsWithMouse) {\r\n                this.reset();\r\n                this.focus();\r\n            }\r\n        });\r\n        this.addEventListener(\"focusin\", (event) => {\r\n            let target = event.target;\r\n            this._activeIndex = this.items.findIndex((item) => item.contains(target));\r\n        });\r\n        this.addEventListener(\"focusout\", (event) => {\r\n            let newTarget = event.relatedTarget;\r\n            if (!this.contains(newTarget)) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this.addEventListener(\"radiochangerequest\", (event) => {\r\n            let target = event.target;\r\n            if (isTagElement(\"e-menuitem\", target)) {\r\n                let item = target;\r\n                if (item.type === \"radio\" && !item.checked) {\r\n                    let checkedRadio = this.findItem((item) => {\r\n                        return item.type === \"radio\" && item.checked;\r\n                    });\r\n                    if (checkedRadio) {\r\n                        checkedRadio.checked = false;\r\n                    }\r\n                    item.checked = true;\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener(\"keydown\", (event) => {\r\n            var _a;\r\n            switch (event.key) {\r\n                case \"ArrowUp\":\r\n                    if (this.activeIndex > 0) {\r\n                        this.focusItemAt(this.activeIndex - 1);\r\n                        event.stopPropagation();\r\n                    }\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    if (this.activeIndex < this.items.length - 1) {\r\n                        this.focusItemAt(this.activeIndex + 1);\r\n                        event.stopPropagation();\r\n                    }\r\n                    break;\r\n                case \"Enter\":\r\n                    if (this.activeItem) {\r\n                        this.activeItem.trigger();\r\n                        event.stopPropagation();\r\n                    }\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    if (this.items.includes(event.target)) {\r\n                        if ((_a = this.activeItem) === null || _a === void 0 ? void 0 : _a.childMenu) {\r\n                            this.activeItem.childMenu.focusItemAt(0);\r\n                            event.stopPropagation();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"Home\":\r\n                    this.focusItemAt(0);\r\n                    break;\r\n                case \"End\":\r\n                    this.focusItemAt(this.items.length - 1);\r\n                    break;\r\n                case \"Escape\":\r\n                    this.reset();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        var _a;\r\n        if (oldValue !== newValue) {\r\n            switch (name) {\r\n                case \"label\":\r\n                    if (oldValue !== newValue) {\r\n                        const label = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"[part~=label]\");\r\n                        if (label) {\r\n                            label.textContent = newValue;\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    focusItemAt(index, childMenu) {\r\n        let item = this.items[index];\r\n        if (item) {\r\n            this._activeIndex = index;\r\n            item.focus();\r\n            if (childMenu && item.childMenu) {\r\n                item.childMenu.focus();\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        let item = this.activeItem;\r\n        this._activeIndex = -1;\r\n        if (item === null || item === void 0 ? void 0 : item.childMenu) {\r\n            item.childMenu.reset();\r\n        }\r\n    }\r\n    findItem(predicate, subitems) {\r\n        let foundItem = null;\r\n        for (let idx = 0; idx < this.items.length; idx++) {\r\n            let item = this.items[idx];\r\n            if (predicate(item)) {\r\n                return item;\r\n            }\r\n            if (subitems && item.childMenu) {\r\n                foundItem = item.childMenu.findItem(predicate, subitems);\r\n                if (foundItem) {\r\n                    return foundItem;\r\n                }\r\n            }\r\n        }\r\n        return foundItem;\r\n    }\r\n};\r\nHTMLEMenuItemGroupElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-menuitemgroup\",\r\n        observedAttributes: [\"label\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"label\", type: \"string\" },\r\n        { name: \"type\", type: \"string\" },\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"rows\", type: \"number\" },\r\n        { name: \"cells\", type: \"number\" },\r\n    ])\r\n], HTMLEMenuItemGroupElementBase);\r\n//# sourceMappingURL=MenuItemGroup.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../../HTMLElement\";\r\nexport { PanelElement };\r\nlet PanelElement = class PanelElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                }\r\n\r\n                :host([state='closed']) #label,\r\n                :host([state='closed']) #content {\r\n                    display: none;\r\n                }\r\n\r\n                :host([state='closed']) #header {\r\n                    padding: 0;\r\n                }\r\n\r\n                :host([state='closed']) #arrow {\r\n                    display: inherit;\r\n                }\r\n                \r\n                :host([state='opened']) #label,\r\n                :host([state='opened']) #content {\r\n                    display: inherit;\r\n                }\r\n\r\n                :host([state='opened']) #arrow {\r\n                    display: none;\r\n                }\r\n\r\n                #content {\r\n                    padding: var(--content-padding, inherit);\r\n                }\r\n\r\n                #header {\r\n                    color: var(--header-color, inherit);\r\n                    text-align: center;\r\n                    padding-top: 0;\r\n\r\n                    user-select: none;\r\n                }\r\n\r\n                #header:hover {\r\n                    --color: var(--header-hover-color, var(--header-color));\r\n                    color: var(--header-hover-color, var(--header-color));\r\n                    font-weight: var(--header-hover-font-weight);\r\n                }\r\n            </style>\r\n            <div>\r\n                <div id=\"header\">\r\n                    <span id=\"arrow\"></span>\r\n                    <span id=\"label\"></span>\r\n                </div>\r\n                <div id=\"content\">\r\n                    <slot></slot>\r\n                </div>\r\n            </div>\r\n        `);\r\n        const header = this.shadowRoot.getElementById('header');\r\n        header.addEventListener('click', () => {\r\n            this.state = (this.state === 'opened') ? 'closed' : 'opened';\r\n        });\r\n    }\r\n    async render() {\r\n        const label = this.shadowRoot.getElementById('label');\r\n        const arrow = this.shadowRoot.getElementById('arrow');\r\n        let rect = this.getBoundingClientRect();\r\n        const arr = (rect.left < window.innerWidth / 2) ? '>' : '<';\r\n        arrow.innerHTML = arr;\r\n        label.innerHTML = this.label || '';\r\n    }\r\n    connectedCallback() {\r\n        this.label = this.label || 'label';\r\n        this.state = this.state || 'opened';\r\n        this.render();\r\n    }\r\n};\r\nPanelElement = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: 'e-panel',\r\n        observedAttributes: ['state']\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: 'label', type: 'string' },\r\n        { name: 'state', type: 'string' },\r\n    ])\r\n], PanelElement);\r\n//# sourceMappingURL=Panel.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../../HTMLElement\";\r\nexport { PanelGroupElement };\r\nlet PanelGroupElement = class PanelGroupElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <link rel=\"stylesheet\" href=\"css/theme.css\"/>\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                }\r\n\r\n                :host([state='closed']) #content {\r\n                    display: none;\r\n                }\r\n\r\n                :host([state='closed']) #less {\r\n                    display: none;\r\n                }\r\n\r\n                :host([state='opened']) #more {\r\n                    display: none;\r\n                }\r\n\r\n                #toggler {\r\n                    display: flex;\r\n                }\r\n\r\n                #toggler:hover {\r\n                    font-weight: 500;\r\n                    color: var(--label-on-hover-color);\r\n                }\r\n\r\n                #label {\r\n                    flex: 1;\r\n                }\r\n            </style>\r\n            <div>\r\n                <div id=\"toggler\">\r\n                    <span id=\"arrow\"><!--<icon #less><icon #more>--></span>\r\n                    <span id=\"label\"></span>\r\n                </div>\r\n                <div id=\"content\">\r\n                    <slot></slot>\r\n                </div>\r\n            </div>\r\n        `);\r\n        this.state = this.state || 'closed';\r\n    }\r\n    connectedCallback() {\r\n        const toggler = this.shadowRoot.querySelector('#toggler');\r\n        const arrow = this.shadowRoot.querySelector('#arrow');\r\n        const label = this.shadowRoot.querySelector('#label');\r\n        toggler.addEventListener('click', () => {\r\n            if (this.state === 'opened') {\r\n                this.state = 'closed';\r\n            }\r\n            else if (this.state === 'closed') {\r\n                this.state = 'opened';\r\n            }\r\n        });\r\n        label.innerHTML = this.label;\r\n    }\r\n};\r\nPanelGroupElement.observedAttributes = ['state'];\r\nPanelGroupElement = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: 'e-panel-group'\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: 'label', type: 'string' },\r\n        { name: 'state', type: 'string' },\r\n    ])\r\n], PanelGroupElement);\r\n//# sourceMappingURL=PanelGroup.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { HTMLEStatusBarElementBase };\r\nlet HTMLEStatusBarElementBase = class HTMLEStatusBarElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: flex;\r\n                    position: relative; \r\n                    user-select: none;\r\n\r\n                    background-color: white;\r\n                }\r\n\r\n                :host(:focus) {\r\n                    outline: 1px solid -webkit-focus-ring-color;\r\n                }\r\n\r\n                :host(:focus) ::slotted(:first-child),\r\n                :host(:not(:focus-within)) ::slotted(:hover) {\r\n                    color: black;\r\n                    background-color: gainsboro;\r\n                }\r\n\r\n                [part~=\"ul\"] {\r\n                    display: block;\r\n                    list-style-type: none;\r\n                    padding: 0; margin: 0;\r\n                }\r\n            </style>\r\n            <ul part=\"ul\">\r\n                <slot></slot>\r\n            </ul>\r\n        `);\r\n        this.items = [];\r\n        this._selectedItemIndex = -1;\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", (event) => {\r\n                const items = event.target.assignedElements()\r\n                    .filter(item => isTagElement(\"e-statusitem\", item));\r\n                this.items = items;\r\n            }, { once: true });\r\n        }\r\n    }\r\n    get selectedItemIndex() {\r\n        return this._selectedItemIndex;\r\n    }\r\n    get selectedItem() {\r\n        return this.items[this.selectedItemIndex] || null;\r\n    }\r\n    insertItem(index, item) {\r\n        index = Math.min(Math.max(index, -this.items.length), this.items.length);\r\n        this.insertBefore(item, this.children[index >= 0 ? index : this.children.length + index]);\r\n        this.items.splice(index, 0, item);\r\n        item.addEventListener(\"mouseenter\", () => {\r\n            this.selectItem(this.items.indexOf(item));\r\n        });\r\n        item.addEventListener(\"mouseleave\", () => {\r\n        });\r\n    }\r\n    findItem(predicate) {\r\n        const items = this.findItems(predicate);\r\n        if (items.length > 0) {\r\n            return items[0];\r\n        }\r\n        return null;\r\n    }\r\n    findItems(predicate) {\r\n        const items = [];\r\n        this.items.forEach((item) => {\r\n            if (predicate(item)) {\r\n                items.push(item);\r\n            }\r\n        });\r\n        return items;\r\n    }\r\n    selectItem(index) {\r\n        if (index !== this.selectedItemIndex) {\r\n            this.clearSelection();\r\n            let item = this.items[index];\r\n            if (item) {\r\n                this._selectedItemIndex = index;\r\n            }\r\n        }\r\n    }\r\n    clearSelection() {\r\n        let item = this.selectedItem;\r\n        if (item) {\r\n            this._selectedItemIndex = -1;\r\n        }\r\n    }\r\n};\r\nHTMLEStatusBarElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-statusbar\"\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"active\", type: \"boolean\" },\r\n    ])\r\n], HTMLEStatusBarElementBase);\r\n//# sourceMappingURL=StatusBar.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../../HTMLElement\";\r\nexport { HTMLEStatusItemElementBase };\r\nlet HTMLEStatusItemElementBase = class HTMLEStatusItemElementBase extends HTMLElement {\r\n    // TODO: Add sync with Promise (icons, etc.)\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    position: relative;\r\n                    display: inline-block;\r\n\r\n                    user-select: none;\r\n                    white-space: nowrap;\r\n\r\n                    padding: 2px 6px;\r\n                    background-color: white;\r\n                }\r\n\r\n                :host(:focus-visible) {\r\n                    outline: none;\r\n                }\r\n\r\n                :host(:hover),\r\n                :host([active]) {\r\n                    background-color: rgb(180, 180, 180);\r\n                }\r\n                \r\n                li {\r\n                    display: flex;\r\n                    height: 100%;\r\n                    list-style-type: none;\r\n                }\r\n            </style>\r\n            <li>\r\n                <slot></slot>\r\n            </li>\r\n        `);\r\n        this.command = null;\r\n        this._stateMap = null;\r\n    }\r\n    get stateMap() {\r\n        return this._stateMap;\r\n    }\r\n    set stateMap(stateMap) {\r\n        this._stateMap = stateMap;\r\n    }\r\n    update(newValue) {\r\n        const { content } = (typeof this.stateMap === \"function\") ? this.stateMap(newValue) : newValue;\r\n        this.textContent = content;\r\n    }\r\n    activate() {\r\n        this.dispatchEvent(new CustomEvent(\"activate\"));\r\n    }\r\n    connectedCallback() {\r\n        this.tabIndex = this.tabIndex;\r\n        this.addEventListener(\"click\", (event) => {\r\n            this.activate();\r\n            event.stopPropagation();\r\n        });\r\n    }\r\n};\r\nHTMLEStatusItemElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-statusitem\",\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"icon\", type: \"string\" },\r\n        { name: \"type\", type: \"string\" },\r\n    ])\r\n], HTMLEStatusItemElementBase);\r\n//# sourceMappingURL=StatusItem.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../../HTMLElement\";\r\nexport { isHTMLETabPanelElement };\r\nexport { BaseHTMLETabPanelElement };\r\nfunction isHTMLETabPanelElement(obj) {\r\n    return obj instanceof Node && obj.nodeType === obj.ELEMENT_NODE && obj.tagName.toLowerCase() === \"e-tabpanel\";\r\n}\r\nlet BaseHTMLETabPanelElement = class BaseHTMLETabPanelElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                }\r\n\r\n                :host([hidden]) {\r\n                    display: none;\r\n                }\r\n            </style>\r\n            <slot></slot>\r\n        `);\r\n    }\r\n    connectedCallback() {\r\n        this.tabIndex = this.tabIndex;\r\n    }\r\n};\r\nBaseHTMLETabPanelElement = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-tabpanel\"\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" }\r\n    ])\r\n], BaseHTMLETabPanelElement);\r\n//# sourceMappingURL=TabPanel.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nimport { isHTMLETabPanelElement } from \"./TabPanel\";\r\nexport { BaseHTMLETabElement };\r\nlet BaseHTMLETabElement = class BaseHTMLETabElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                    user-select: none;\r\n                    white-space: nowrap;\r\n                    padding: 2px 6px;\r\n                    border-left: 3px solid transparent;\r\n                    cursor: pointer;\r\n                }\r\n                \r\n                :host([disabled]) {\r\n                    color: grey;\r\n                    pointer-events: none;\r\n                }\r\n\r\n                :host([active]) {\r\n                    border-left: 3px solid dimgray;\r\n                    background-color: whitesmoke;\r\n                }\r\n\r\n                ::slotted(*) {\r\n                    pointer-events: none;\r\n                }\r\n            </style>\r\n            <slot></slot>\r\n        `);\r\n        this.panel = null;\r\n    }\r\n    connectedCallback() {\r\n        this.tabIndex = this.tabIndex;\r\n        let panel = document.getElementById(this.controls);\r\n        if (isTagElement(\"e-tabpanel\", panel)) {\r\n            this.panel = panel;\r\n            this.panel.hidden = !this.active;\r\n        }\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        switch (name) {\r\n            case \"controls\":\r\n                if (oldValue !== newValue) {\r\n                    let panel = document.getElementById(this.controls);\r\n                    if (isHTMLETabPanelElement(panel)) {\r\n                        this.panel = panel;\r\n                    }\r\n                }\r\n                break;\r\n            case \"active\":\r\n                if (this.active) {\r\n                    this.dispatchEvent(new CustomEvent(\"tabchange\", { detail: { tab: this }, bubbles: true }));\r\n                }\r\n                if (this.panel) {\r\n                    this.panel.hidden = !this.active;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n};\r\nBaseHTMLETabElement = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-tab\",\r\n        observedAttributes: [\"active\", \"controls\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"active\", type: \"boolean\" },\r\n        { name: \"disabled\", type: \"boolean\" },\r\n        { name: \"controls\", type: \"string\" },\r\n    ])\r\n], BaseHTMLETabElement);\r\n//# sourceMappingURL=Tab.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { BaseHTMLETabListElement };\r\nlet BaseHTMLETabListElement = class BaseHTMLETabListElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                    position: relative;\r\n                }\r\n            </style>\r\n            <slot></slot>\r\n        `);\r\n        this.tabs = [];\r\n        this._activeIndex = 1;\r\n    }\r\n    get activeIndex() {\r\n        return this._activeIndex;\r\n    }\r\n    get activeTab() {\r\n        return this.tabs[this._activeIndex] || null;\r\n    }\r\n    connectedCallback() {\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = this.shadowRoot.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", (event) => {\r\n                const tabs = event.target\r\n                    .assignedElements()\r\n                    .filter(tab => isTagElement(\"e-tab\", tab));\r\n                this.tabs = tabs;\r\n                this._activeIndex = this.tabs.findIndex(tab => tab.active);\r\n            });\r\n        }\r\n        this.addEventListener(\"keydown\", (event) => {\r\n            switch (event.key) {\r\n                case \"ArrowUp\":\r\n                    this.focusTabAt((this.activeIndex <= 0) ? this.tabs.length - 1 : this.activeIndex - 1);\r\n                    event.stopPropagation();\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    this.focusTabAt((this.activeIndex >= this.tabs.length - 1) ? 0 : this.activeIndex + 1);\r\n                    event.stopPropagation();\r\n                    break;\r\n                case \"Enter\":\r\n                    if (this.activeTab) {\r\n                        this.activateTab(this.activeTab);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n        this.addEventListener(\"click\", (event) => {\r\n            let target = event.target;\r\n            if (isTagElement(\"e-tab\", target)) {\r\n                target.active = true;\r\n            }\r\n        });\r\n        this.addEventListener(\"tabchange\", (event) => {\r\n            let targetIndex = this.tabs.indexOf(event.detail.tab);\r\n            this._activeIndex = targetIndex;\r\n            this.tabs.forEach((thisTab, thisTabIndex) => {\r\n                if (thisTabIndex !== targetIndex) {\r\n                    thisTab.active = false;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    focusTabAt(index) {\r\n        let tab = this.tabs[index];\r\n        if (tab) {\r\n            this._activeIndex = index;\r\n            tab.focus();\r\n        }\r\n    }\r\n    findTab(predicate) {\r\n        return this.tabs.find(predicate) || null;\r\n    }\r\n    activateTab(tab) {\r\n        if (this.tabs.includes(tab)) {\r\n            tab.active = true;\r\n        }\r\n    }\r\n};\r\nBaseHTMLETabListElement = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-tablist\"\r\n    })\r\n], BaseHTMLETabListElement);\r\n//# sourceMappingURL=TabList.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { HTMLETreeItemElementBase };\r\nlet HTMLETreeItemElementBase = class HTMLETreeItemElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: inline-block;\r\n\r\n                    user-select: none;\r\n                    white-space: nowrap;\r\n\r\n                    padding: 0;\r\n                    cursor: pointer;\r\n\r\n                    --indent-width: 6px;\r\n                }\r\n                \r\n                :host([active]) [part~=\"content\"],\r\n                [part~=\"content\"]:hover {\r\n                    background-color: gainsboro;\r\n                }\r\n\r\n                :host(:not([expanded])) [part~=\"container\"] {\r\n                    display: none;\r\n                }\r\n\r\n                [part~=\"content\"] {\r\n                    font-size: 1em;\r\n                    display: flex;\r\n                    padding-left: calc(var(--tree-indent) * var(--indent-width));\r\n                }\r\n\r\n                [part~=\"label\"],\r\n                ::slotted([slot=\"label\"]) {\r\n                    display: block;\r\n                    width: 100%;\r\n                    pointer-events: none;\r\n                    overflow: hidden;\r\n                    white-space: nowrap;\r\n                    text-overflow: ellipsis;\r\n                }\r\n\r\n                [part~=\"toggle_arrow\"]:hover {\r\n                    background-color: whitesmoke;\r\n                }\r\n\r\n                :host([leaf]) [part~=\"container\"],\r\n                [part~=\"container\"]:empty {\r\n                    display: none;\r\n                }\r\n\r\n                [part~=\"toggle_arrow\"] {\r\n                    flex: none;\r\n                    display: inline-block;\r\n                    width: 18px;\r\n                    height: 18px;\r\n                    margin: 2px;\r\n                    margin-right: 6px;\r\n                    border-radius: 2px;\r\n                }\r\n\r\n                :host([leaf]) [part~=\"toggle_arrow\"] {\r\n                    visibility: hidden;\r\n                }\r\n\r\n                [part~=\"toggle_arrow\"]::after {\r\n                    display: inline-block;\r\n                    width: 18px;\r\n                    height: 18px;\r\n                    position: absolute;\r\n                    color: dimgray;\r\n                    text-align: center;\r\n                }\r\n\r\n                :host(:not([expanded])) [part~=\"toggle_arrow\"]::after {\r\n                    content: \"►\";\r\n                }\r\n\r\n                :host([expanded]) [part~=\"toggle_arrow\"]::after {\r\n                    content: \"▼\";\r\n                }\r\n\r\n                [part~=\"state\"] {\r\n                    flex: none;\r\n                }\r\n\r\n                [part~=\"container\"] {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                }\r\n            </style>\r\n            <span part=\"content\">\r\n                <span part=\"toggle_arrow\"></span>\r\n                <slot name=\"label\"><span part=\"label\"></span></slot>\r\n            </span>\r\n            <div part=\"container\">\r\n                <slot></slot>\r\n            </div>\r\n        `);\r\n        this.items = [];\r\n        this.parent = null;\r\n        this.indent = 0;\r\n        this._toggleArrow = this.shadowRoot.querySelector(\"[part~=toggle_arrow]\");\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot:not([name])\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                const items = slot.assignedElements()\r\n                    .filter(item => isTagElement(\"e-treeitem\", item));\r\n                this.items = items;\r\n                this.items.forEach((item) => {\r\n                    item.parent = this;\r\n                    item.indent = this.indent + 1;\r\n                });\r\n            });\r\n        }\r\n        this.shadowRoot.addEventListener(\"mousedown\", (event) => {\r\n            let target = event.target;\r\n            if (target === this._toggleArrow) {\r\n                this.toggle();\r\n            }\r\n        });\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        var _a, _b;\r\n        if (newValue !== oldValue) {\r\n            switch (name) {\r\n                case \"label\":\r\n                    if (oldValue !== newValue) {\r\n                        const labelPart = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"[part~=label]\");\r\n                        if (labelPart) {\r\n                            labelPart.textContent = newValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"icon\":\r\n                    if (oldValue !== newValue) {\r\n                        const iconPart = (_b = this.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector(\"[part~=icon]\");\r\n                        if (iconPart) {\r\n                            iconPart.dataset.value = newValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"indent\":\r\n                    if (oldValue !== newValue) {\r\n                        this.style.setProperty(\"--tree-indent\", newValue);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    deepestVisibleChildItem() {\r\n        if (this.expanded && this.items.length > 0) {\r\n            let lastChildItem = this.items[this.items.length - 1];\r\n            return lastChildItem.deepestVisibleChildItem();\r\n        }\r\n        return this;\r\n    }\r\n    previousVisibleItem() {\r\n        if (this.parent) {\r\n            let indexOfThis = this.parent.items.indexOf(this);\r\n            if (indexOfThis > 0) {\r\n                let previousItem = this.parent.items[indexOfThis - 1];\r\n                return previousItem.deepestVisibleChildItem();\r\n            }\r\n            return isTagElement(\"e-treeitem\", this.parent) ? this.parent : this;\r\n        }\r\n        return this;\r\n    }\r\n    nextVisibleItem() {\r\n        if (this.expanded && this.items.length > 0) {\r\n            return this.items[0];\r\n        }\r\n        let nearestItem = this.nearestParentItem();\r\n        if (nearestItem.parent) {\r\n            let indexOfNearest = nearestItem.parent.items.indexOf(nearestItem);\r\n            if (indexOfNearest < nearestItem.parent.items.length - 1) {\r\n                return nearestItem.parent.items[indexOfNearest + 1];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    nearestParentItem() {\r\n        if (isTagElement(\"e-treeitem\", this.parent)) {\r\n            let indexOfThis = this.parent.items.indexOf(this);\r\n            if (indexOfThis === this.parent.items.length - 1) {\r\n                return this.parent.nearestParentItem();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    toggle() {\r\n        this.expanded = !this.expanded;\r\n        this.dispatchEvent(new CustomEvent(\"e-toggle\", { bubbles: true }));\r\n    }\r\n    trigger() {\r\n        this.dispatchEvent(new CustomEvent(\"e-trigger\", { bubbles: true }));\r\n    }\r\n};\r\nHTMLETreeItemElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-treeitem\",\r\n        observedAttributes: [\"icon\", \"label\", \"expanded\", \"indent\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"label\", type: \"string\" },\r\n        { name: \"icon\", type: \"string\" },\r\n        { name: \"indent\", type: \"number\" },\r\n        { name: \"active\", type: \"boolean\" },\r\n        { name: \"expanded\", type: \"boolean\" },\r\n        { name: \"leaf\", type: \"boolean\" }\r\n    ])\r\n], HTMLETreeItemElementBase);\r\n//# sourceMappingURL=TreeItem.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { HTMLETreeElementBase };\r\nlet HTMLETreeElementBase = class HTMLETreeElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                    position: relative;\r\n                    user-select: none;\r\n                }\r\n\r\n                [part~=\"container\"] {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                }\r\n            </style>\r\n            <div part=\"container\">\r\n                <slot></slot>\r\n            </div>\r\n        `);\r\n        this.items = [];\r\n        this._activeItem = null;\r\n    }\r\n    get activeItem() {\r\n        return this._activeItem;\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                const items = slot.assignedElements()\r\n                    .filter(item => isTagElement(\"e-treeitem\", item));\r\n                this.items = items;\r\n                items.forEach((item) => {\r\n                    item.parent = this;\r\n                    item.indent = 1;\r\n                });\r\n            });\r\n        }\r\n        this.addEventListener(\"keydown\", (event) => {\r\n            switch (event.key) {\r\n                case \"ArrowLeft\":\r\n                    if (this.activeItem) {\r\n                        if (this.activeItem.expanded) {\r\n                            this.activeItem.toggle();\r\n                        }\r\n                        else {\r\n                            if (isTagElement(\"e-treeitem\", this.activeItem.parent)) {\r\n                                this.activeItem.parent.focus();\r\n                            }\r\n                        }\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    if (this.activeItem) {\r\n                        if (!this.activeItem.expanded) {\r\n                            this.activeItem.toggle();\r\n                        }\r\n                        else {\r\n                            if (this.activeItem.items.length > 0) {\r\n                                this.activeItem.items[0].focus();\r\n                            }\r\n                        }\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                case \"ArrowUp\":\r\n                    if (this.activeItem) {\r\n                        this.activeItem.previousVisibleItem().focus();\r\n                    }\r\n                    else if (this.items.length > 0) {\r\n                        this.items[0].focus();\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    if (this.activeItem) {\r\n                        this.activeItem.nextVisibleItem().focus();\r\n                    }\r\n                    else if (this.items.length > 0) {\r\n                        this.items[this.items.length - 1].focus();\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                case \"Home\":\r\n                    if (this.items.length > 0) {\r\n                        this.items[0].focus({ preventScroll: true });\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                case \"End\":\r\n                    if (this.items.length > 0) {\r\n                        this.items[this.items.length - 1].deepestVisibleChildItem().focus();\r\n                    }\r\n                    event.preventDefault();\r\n                    break;\r\n                case \"Enter\":\r\n                    if (this.activeItem) {\r\n                        this.activeItem.trigger();\r\n                    }\r\n                    break;\r\n                case \"Escape\":\r\n                    this.active = false;\r\n                    if (this.activeItem) {\r\n                        this.activeItem.active = false;\r\n                    }\r\n                    this.focus();\r\n                    break;\r\n            }\r\n        });\r\n        this.addEventListener(\"mousedown\", (event) => {\r\n            let target = event.target;\r\n            if (isTagElement(\"e-treeitem\", target)) {\r\n                target.trigger();\r\n            }\r\n        });\r\n        this.addEventListener(\"focusin\", (event) => {\r\n            let target = event.target;\r\n            if (!this.active) {\r\n                this.active = true;\r\n            }\r\n            let closestItem = target.closest(\"e-treeitem\");\r\n            if (closestItem && this.contains(closestItem)) {\r\n                if (this._activeItem) {\r\n                    this._activeItem.active = false;\r\n                }\r\n                this._activeItem = closestItem;\r\n                this._activeItem.active = true;\r\n            }\r\n        });\r\n        this.addEventListener(\"focusout\", (event) => {\r\n            let relatedTarget = event.relatedTarget;\r\n            if (!this.contains(relatedTarget)) {\r\n                this.active = false;\r\n            }\r\n        });\r\n    }\r\n};\r\nHTMLETreeElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-tree\"\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"active\", type: \"boolean\" },\r\n        { name: \"name\", type: \"string\" }\r\n    ])\r\n], HTMLETreeElementBase);\r\n//# sourceMappingURL=Tree.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../../HTMLElement\";\r\nexport { HTMLEBreadcrumbItemElementBase };\r\nlet HTMLEBreadcrumbItemElementBase = class HTMLEBreadcrumbItemElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        let separatorArrowUrl = JSON.stringify(\"../assets/editor/icons/chevron_right_black_18dp.svg\");\r\n        bindShadowRoot(this, /*template*/ `\r\n            <link rel=\"preload\" href=${separatorArrowUrl} as=\"image\" crossorigin>\r\n            <style>\r\n                :host {\r\n                    display: inline-block;\r\n                    cursor: pointer;\r\n\r\n                    --separator-arrow-url: url(${separatorArrowUrl});\r\n                }\r\n\r\n                :host([active]) {\r\n                    font-weight: bold;\r\n                }\r\n\r\n                :host([active]) [part~=\"li\"]::after {\r\n                    display: none;\r\n                }\r\n\r\n                [part~=\"li\"]::after {\r\n                    content: \"\";\r\n                    display: inline-block;\r\n                    width: 18px;\r\n                    height: 18px;\r\n                    background-color: dimgray;\r\n                    transform: scale(1.2) translateY(4%);\r\n                    -webkit-mask-image: var(--separator-arrow-url);\r\n                    mask-image: var(--separator-arrow-url);\r\n                }\r\n\r\n                :host([hidden]) {\r\n                    display: none;\r\n                }\r\n\r\n                [part~=\"li\"] {\r\n                    display: flex;\r\n                    list-style-type: none;\r\n                }\r\n            </style>\r\n            <li part=\"li\">\r\n                <slot></slot>\r\n            </li>\r\n        `);\r\n    }\r\n    connectedCallback() {\r\n        this.tabIndex = this.tabIndex;\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        var _a;\r\n        if (newValue !== oldValue) {\r\n            switch (name) {\r\n                case \"label\":\r\n                    if (oldValue !== newValue) {\r\n                        const labelPart = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"[part~=label]\");\r\n                        if (labelPart) {\r\n                            labelPart.textContent = newValue;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};\r\nHTMLEBreadcrumbItemElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-breadcrumbitem\",\r\n        observedAttributes: [\"label\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"label\", type: \"string\" },\r\n        { name: \"active\", type: \"boolean\" }\r\n    ])\r\n], HTMLEBreadcrumbItemElementBase);\r\n//# sourceMappingURL=BreadcrumbItem.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { HTMLEBreadcrumbTrailElementBase };\r\nlet HTMLEBreadcrumbTrailElementBase = class HTMLEBreadcrumbTrailElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                }\r\n                \r\n                [part~=\"ul\"] {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    list-style-type: none;\r\n                    padding: 0; margin: 0;\r\n                }\r\n            </style>\r\n            <ul part=\"ul\">\r\n                <slot></slot>\r\n            </ul>\r\n        `);\r\n        this.items = [];\r\n    }\r\n    activateItem(item) {\r\n        let itemIndex = this.items.indexOf(item);\r\n        if (itemIndex > -1) {\r\n            this.items.forEach((item, index) => {\r\n                item.active = (index == itemIndex);\r\n                item.hidden = (index > itemIndex);\r\n            });\r\n            let activeItem = this.items[itemIndex];\r\n            activeItem.dispatchEvent(new CustomEvent(\"activate\"));\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                const items = slot.assignedElements().filter(item => isTagElement(\"e-breadcrumbitem\", item));\r\n                this.items = items;\r\n                items.forEach((item, index) => {\r\n                    item.active = (index === items.length - 1);\r\n                });\r\n            });\r\n        }\r\n        this.addEventListener(\"mousedown\", (event) => {\r\n            let target = event.target;\r\n            if (isTagElement(\"e-breadcrumbitem\", target)) {\r\n                this.activateItem(target);\r\n            }\r\n        });\r\n    }\r\n};\r\nHTMLEBreadcrumbTrailElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-breadcrumbtrail\"\r\n    })\r\n], HTMLEBreadcrumbTrailElementBase);\r\n//# sourceMappingURL=BreadcrumbTrail.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../../HTMLElement\";\r\nexport { HTMLEDraggableElementBase };\r\nlet HTMLEDraggableElementBase = class HTMLEDraggableElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: inline-block;\r\n                    padding: 3px 4px;\r\n                    cursor: pointer;\r\n                    white-space: nowrap;\r\n                    border-radius: 4px;\r\n                    border: 1px solid black;\r\n                    user-select: none;\r\n                }\r\n\r\n                :host([disabled]) {\r\n                    pointer-events: none;\r\n                    color: gray;\r\n                    border-color: gray;\r\n                }\r\n\r\n                :host([selected]:active) {\r\n                    cursor: grabbing;\r\n                }\r\n                \r\n                :host([selected]) {\r\n                    cursor: grab;\r\n                    font-weight: bold;\r\n                    outline: 1px auto black;\r\n                }\r\n\r\n                :host([dragovered]) {\r\n                    border-style: dotted;\r\n                }\r\n                \r\n                [part=\"container\"] {\r\n                    display: flex;\r\n                    align-items: center;\r\n                }\r\n            </style>\r\n            <div part=\"container\">\r\n                <slot>&nbsp;</slot>\r\n            </div>\r\n        `);\r\n    }\r\n    connectedCallback() {\r\n        this.tabIndex = this.tabIndex;\r\n        this.draggable = true;\r\n    }\r\n};\r\nHTMLEDraggableElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-draggable\"\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"selected\", type: \"boolean\" },\r\n        { name: \"dragged\", type: \"boolean\" },\r\n        { name: \"dragovered\", type: \"boolean\" },\r\n        { name: \"disabled\", type: \"boolean\" },\r\n        { name: \"type\", type: \"string\" },\r\n        { name: \"data\", type: \"json\" }\r\n    ])\r\n], HTMLEDraggableElementBase);\r\n//# sourceMappingURL=Draggable.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nexport { HTMLEDragzoneElementBase };\r\nlet HTMLEDragzoneElementBase = class HTMLEDragzoneElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                }\r\n\r\n                :host([disabled]) {\r\n                    pointer-events: none;\r\n                }\r\n\r\n                [part~=\"container\"]:empty {\r\n                    display: none !important;\r\n                }\r\n\r\n                [part~=\"container\"] {\r\n                    position: relative;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    padding: 2px;\r\n                }\r\n\r\n                ::slotted(e-draggable:not(:only-child)) {\r\n                    margin-top: 2px;\r\n                    margin-bottom: 2px;\r\n                }\r\n            </style>\r\n            <div part=\"container\">\r\n                <span part=\"label\"/></span>\r\n                <slot></slot>\r\n            </div>\r\n        `);\r\n        this.draggables = [];\r\n        this.selectedDraggables = [];\r\n    }\r\n    selectDraggable(draggable) {\r\n        draggable.selected = true;\r\n        if (!this.selectedDraggables.includes(draggable)) {\r\n            this.selectedDraggables.push(draggable);\r\n        }\r\n    }\r\n    unselectDraggable(draggable) {\r\n        let index = this.selectedDraggables.indexOf(draggable);\r\n        if (index > -1) {\r\n            draggable.selected = false;\r\n            this.selectedDraggables.splice(index, 1);\r\n        }\r\n    }\r\n    clearSelection() {\r\n        this.selectedDraggables.forEach((draggable) => {\r\n            draggable.selected = false;\r\n        });\r\n        this.selectedDraggables = [];\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                const draggables = slot.assignedElements().filter(elem => isTagElement(\"e-draggable\", elem));\r\n                this.draggables = draggables;\r\n                this.draggables.forEach((draggable) => {\r\n                    draggable.draggable = true;\r\n                });\r\n            });\r\n        }\r\n        this.addEventListener(\"keydown\", (event) => {\r\n            switch (event.key) {\r\n                case \"Escape\":\r\n                    this.clearSelection();\r\n                    this.focus();\r\n                    break;\r\n            }\r\n        });\r\n        this.addEventListener(\"dragstart\", (event) => {\r\n            let target = event.target;\r\n            if (this.draggables.includes(target)) {\r\n                this.selectedDraggables.forEach((thisSelectedDraggable) => {\r\n                    thisSelectedDraggable.dragged = true;\r\n                });\r\n                let dataTransfer = event.dataTransfer;\r\n                if (dataTransfer) {\r\n                    dataTransfer.effectAllowed = \"move\";\r\n                    dataTransfer.setData(\"text/plain\", this.id);\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener(\"dragend\", (event) => {\r\n            let target = event.target;\r\n            if (this.draggables.includes(target)) {\r\n                let thisDraggedDraggables = this.draggables.filter(draggable => draggable.dragged);\r\n                thisDraggedDraggables.forEach((thisDraggedDraggable) => {\r\n                    thisDraggedDraggable.dragged = false;\r\n                });\r\n            }\r\n        });\r\n        this.addEventListener(\"focusout\", (event) => {\r\n            let relatedTarget = event.relatedTarget;\r\n            if (!this.contains(relatedTarget)) {\r\n                this.clearSelection();\r\n            }\r\n        });\r\n        this.addEventListener(\"mousedown\", (event) => {\r\n            let target = event.target;\r\n            if (event.button === 0) {\r\n                if (this.draggables.includes(target)) {\r\n                    if (!event.shiftKey && !event.ctrlKey) {\r\n                        if (!target.selected) {\r\n                            this.clearSelection();\r\n                            this.selectDraggable(target);\r\n                        }\r\n                    }\r\n                    else if (event.ctrlKey) {\r\n                        (!target.selected) ?\r\n                            this.selectDraggable(target) :\r\n                            this.unselectDraggable(target);\r\n                    }\r\n                    else if (event.shiftKey) {\r\n                        if (this.selectedDraggables.length > 0) {\r\n                            let targetIndex = this.draggables.indexOf(target);\r\n                            let firstIndex = this.draggables.indexOf(this.selectedDraggables[0]);\r\n                            let direction = Math.sign(targetIndex - firstIndex);\r\n                            let fromIndex = (direction > 0) ? 0 : this.draggables.length - 1;\r\n                            let toIndex = (direction > 0) ? this.draggables.length - 1 : 0;\r\n                            let startRangeIndex = (direction > 0) ? firstIndex : targetIndex;\r\n                            let endRangeIndex = (direction > 0) ? targetIndex : firstIndex;\r\n                            for (let index = fromIndex; index !== toIndex; index += direction) {\r\n                                (index >= startRangeIndex && index <= endRangeIndex) ?\r\n                                    this.selectDraggable(this.draggables[index]) :\r\n                                    this.unselectDraggable(this.draggables[index]);\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.selectDraggable(target);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.clearSelection();\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener(\"mouseup\", (event) => {\r\n            let target = event.target;\r\n            if (event.button === 0) {\r\n                if (this.draggables.includes(target)) {\r\n                    if (!event.shiftKey && !event.ctrlKey) {\r\n                        this.draggables.forEach((thisDraggable) => {\r\n                            if (thisDraggable !== target) {\r\n                                this.unselectDraggable(thisDraggable);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nHTMLEDragzoneElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-dragzone\"\r\n    })\r\n], HTMLEDragzoneElementBase);\r\n//# sourceMappingURL=Dragzone.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nimport { setPropertyFromPath } from \"../../Snippets\";\r\nexport { HTMLEDropzoneElementBase };\r\nexport { DropzoneDataBase };\r\nexport { DropzoneData };\r\nlet HTMLEDropzoneElementBase = class HTMLEDropzoneElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*html*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                    border: 1px dashed gray;\r\n                }\r\n\r\n                :host([disabled]) {\r\n                    pointer-events: none;\r\n                }\r\n\r\n                :host(:empty) [part~=\"container\"] {\r\n                    display: none !important;\r\n                }\r\n\r\n                [part~=\"container\"] {\r\n                    position: relative;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    padding: 2px;\r\n                }\r\n\r\n                ::slotted(e-draggable:not(:only-child)) {\r\n                    margin-top: 2px;\r\n                    margin-bottom: 2px;\r\n                }\r\n\r\n                :host(:not([multiple]):not(:empty)) [part=\"appendarea\"],\r\n                :host(:not(:empty):not([dragovered])) [part=\"appendarea\"] {\r\n                    display: none !important;\r\n                }\r\n\r\n                [part=\"appendarea\"] {\r\n                    display: block;\r\n                    margin: 2px;\r\n                    border-radius: 4px;\r\n                    border: 1px dotted black;\r\n                }\r\n\r\n                :host(:not([dragovered=\"appendarea\"])) [part=\"appendarea\"] {\r\n                    border-color: transparent;\r\n                }\r\n                \r\n                [part=\"placeholder\"] {\r\n                    display: inline-block;\r\n                    color: grey;\r\n                    pointer-events: none;\r\n                    user-select: none;\r\n                }\r\n            </style>\r\n            <div part=\"container\">\r\n                <slot></slot>\r\n            </div>\r\n            <div part=\"appendarea\">\r\n                <span part=\"placeholder\">&nbsp;</span>\r\n            </div>\r\n            `);\r\n        this.draggables = [];\r\n        this.selectedDraggables = [];\r\n        this.droptest = null;\r\n    }\r\n    selectDraggable(draggable) {\r\n        draggable.selected = true;\r\n        if (!this.selectedDraggables.includes(draggable)) {\r\n            this.selectedDraggables.push(draggable);\r\n        }\r\n    }\r\n    unselectDraggable(draggable) {\r\n        let index = this.selectedDraggables.indexOf(draggable);\r\n        if (index > -1) {\r\n            draggable.selected = false;\r\n            this.selectedDraggables.splice(index, 1);\r\n        }\r\n    }\r\n    clearSelection() {\r\n        this.selectedDraggables.forEach((draggable) => {\r\n            draggable.selected = false;\r\n        });\r\n        this.selectedDraggables = [];\r\n    }\r\n    connectedCallback() {\r\n        var _a;\r\n        this.tabIndex = this.tabIndex;\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                const draggables = slot.assignedElements().filter(elem => isTagElement(\"e-draggable\", elem));\r\n                this.draggables = draggables;\r\n                this.draggables.forEach((draggable) => {\r\n                    draggable.draggable = false;\r\n                });\r\n            });\r\n        }\r\n        const appendAreaPart = this.shadowRoot.querySelector(\"[part='appendarea']\");\r\n        this.addEventListener(\"keydown\", (event) => {\r\n            switch (event.key) {\r\n                case \"Delete\":\r\n                    if (this == event.target) {\r\n                        this.removeDraggables();\r\n                    }\r\n                    else {\r\n                        this.removeDraggables(draggable => draggable.selected);\r\n                    }\r\n                    event.stopPropagation();\r\n                    break;\r\n                case \"Escape\":\r\n                    this.clearSelection();\r\n                    this.focus();\r\n                    break;\r\n            }\r\n        });\r\n        this.addEventListener(\"focusout\", (event) => {\r\n            let relatedTarget = event.relatedTarget;\r\n            if (!this.contains(relatedTarget)) {\r\n                this.clearSelection();\r\n            }\r\n        });\r\n        this.addEventListener(\"mousedown\", (event) => {\r\n            let target = event.target;\r\n            if (event.button === 0) {\r\n                if (this.draggables.includes(target)) {\r\n                    if (!event.shiftKey && !event.ctrlKey) {\r\n                        if (!target.selected) {\r\n                            this.clearSelection();\r\n                            this.selectDraggable(target);\r\n                        }\r\n                    }\r\n                    else if (event.ctrlKey) {\r\n                        (!target.selected) ?\r\n                            this.selectDraggable(target) :\r\n                            this.unselectDraggable(target);\r\n                    }\r\n                    else if (event.shiftKey) {\r\n                        if (this.selectedDraggables.length > 0) {\r\n                            let targetIndex = this.draggables.indexOf(target);\r\n                            let firstIndex = this.draggables.indexOf(this.selectedDraggables[0]);\r\n                            let direction = Math.sign(targetIndex - firstIndex);\r\n                            let fromIndex = (direction > 0) ? 0 : this.draggables.length - 1;\r\n                            let toIndex = (direction > 0) ? this.draggables.length - 1 : 0;\r\n                            let startRangeIndex = (direction > 0) ? firstIndex : targetIndex;\r\n                            let endRangeIndex = (direction > 0) ? targetIndex : firstIndex;\r\n                            for (let index = fromIndex; index !== toIndex; index += direction) {\r\n                                (index >= startRangeIndex && index <= endRangeIndex) ?\r\n                                    this.selectDraggable(this.draggables[index]) :\r\n                                    this.unselectDraggable(this.draggables[index]);\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.selectDraggable(target);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.clearSelection();\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener(\"mouseup\", (event) => {\r\n            let target = event.target;\r\n            if (event.button === 0) {\r\n                if (this.draggables.includes(target)) {\r\n                    if (!event.shiftKey && !event.ctrlKey) {\r\n                        this.draggables.forEach((thisDraggable) => {\r\n                            if (thisDraggable !== target) {\r\n                                this.unselectDraggable(thisDraggable);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.addEventListener(\"dragover\", (event) => {\r\n            event.preventDefault();\r\n        });\r\n        this.shadowRoot.addEventListener(\"dragover\", (event) => {\r\n            event.preventDefault();\r\n        });\r\n        this.addEventListener(\"dragenter\", (event) => {\r\n            let target = event.target;\r\n            if (this.draggables.includes(target)) {\r\n                target.dragovered = true;\r\n                this.dragovered = \"draggable\";\r\n            }\r\n            else {\r\n                this.dragovered = \"self\";\r\n            }\r\n            event.preventDefault();\r\n        });\r\n        this.shadowRoot.addEventListener(\"dragenter\", (event) => {\r\n            let target = event.target;\r\n            if (target == appendAreaPart) {\r\n                this.dragovered = \"appendarea\";\r\n            }\r\n            event.preventDefault();\r\n        });\r\n        this.addEventListener(\"dragleave\", (event) => {\r\n            let relatedTarget = event.relatedTarget;\r\n            let target = event.target;\r\n            if (target == this || this.draggables.includes(target)) {\r\n                if (target == this) {\r\n                    if (appendAreaPart) {\r\n                        this.dragovered = \"self\";\r\n                    }\r\n                    if (!this.draggables.includes(relatedTarget)) {\r\n                        this.dragovered = null;\r\n                    }\r\n                }\r\n                else {\r\n                    target.dragovered = false;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        });\r\n        this.shadowRoot.addEventListener(\"dragleave\", (event) => {\r\n            let target = event.target;\r\n            if (target == appendAreaPart) {\r\n                this.dragovered = \"self\";\r\n            }\r\n            event.preventDefault();\r\n        });\r\n        this.addEventListener(\"drop\", (event) => {\r\n            let target = event.target;\r\n            if (target == this || this.draggables.includes(target)) {\r\n                let dropIndex = this.draggables.length;\r\n                if (target == this) {\r\n                    this.dragovered = null;\r\n                }\r\n                else {\r\n                    target.dragovered = false;\r\n                    dropIndex = this.draggables.indexOf(target);\r\n                }\r\n                let dataTransfer = event.dataTransfer;\r\n                if (dataTransfer) {\r\n                    let dragzoneId = dataTransfer.getData(\"text/plain\");\r\n                    let dragzone = document.getElementById(dragzoneId);\r\n                    if (dragzone) {\r\n                        let selectedDraggables = dragzone.selectedDraggables;\r\n                        if (selectedDraggables) {\r\n                            selectedDraggables.forEach((selectedDraggable) => {\r\n                                selectedDraggable.dragged = false;\r\n                            });\r\n                            dragzone.clearSelection();\r\n                            this.addDraggables(selectedDraggables, dropIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.dragovered = null;\r\n            event.preventDefault();\r\n        });\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        var _a;\r\n        if (newValue !== oldValue) {\r\n            switch (name) {\r\n                case \"placeholder\":\r\n                    if (oldValue !== newValue) {\r\n                        const placeholderPart = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"[part~=placeholder]\");\r\n                        if (placeholderPart) {\r\n                            placeholderPart.textContent = newValue;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    addDraggables(draggables, position) {\r\n        var _a;\r\n        if (draggables.length > 0) {\r\n            let dataTransferSuccess = true;\r\n            if (this.droptest) {\r\n                dataTransferSuccess = this.droptest(this, draggables);\r\n            }\r\n            let newDraggables = [];\r\n            let insertionPosition = -1;\r\n            if (dataTransferSuccess) {\r\n                if (this.multiple) {\r\n                    draggables.forEach((draggable) => {\r\n                        let newDraggable = draggable.cloneNode(true);\r\n                        if (position > -1 && position < this.draggables.length) {\r\n                            this.draggables[position].insertAdjacentElement(\"beforebegin\", newDraggable);\r\n                            insertionPosition = (insertionPosition < 0) ? position : insertionPosition;\r\n                        }\r\n                        else {\r\n                            this.appendChild(newDraggable);\r\n                            insertionPosition = (insertionPosition < 0) ? this.draggables.length - 1 : insertionPosition;\r\n                        }\r\n                        newDraggables.push(newDraggable);\r\n                    });\r\n                }\r\n                else {\r\n                    let newDraggable = draggables[0].cloneNode(true);\r\n                    if (this.draggables.length > 0) {\r\n                        this.replaceChild(newDraggable, this.draggables[0]);\r\n                    }\r\n                    else {\r\n                        this.appendChild(newDraggable);\r\n                    }\r\n                    newDraggables.push(newDraggable);\r\n                    insertionPosition = 0;\r\n                }\r\n            }\r\n            const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n            if (slot) {\r\n                slot.addEventListener(\"slotchange\", () => {\r\n                    this.dispatchEvent(new CustomEvent(\"datachange\", {\r\n                        bubbles: true,\r\n                        detail: {\r\n                            action: \"insert\",\r\n                            draggables: newDraggables,\r\n                            position: insertionPosition\r\n                        }\r\n                    }));\r\n                }, { once: true });\r\n            }\r\n            return newDraggables;\r\n        }\r\n        return null;\r\n    }\r\n    removeDraggables(predicate = () => true) {\r\n        var _a;\r\n        let toRemove = this.draggables.filter((value, index) => {\r\n            return predicate(value, index);\r\n        });\r\n        let atPosition = this.draggables.indexOf(toRemove[0]);\r\n        toRemove.forEach((draggable) => {\r\n            draggable.remove();\r\n        });\r\n        const slot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot\");\r\n        if (slot) {\r\n            slot.addEventListener(\"slotchange\", () => {\r\n                this.dispatchEvent(new CustomEvent(\"datachange\", {\r\n                    bubbles: true,\r\n                    detail: {\r\n                        action: \"remove\",\r\n                        draggables: toRemove,\r\n                        position: atPosition\r\n                    }\r\n                }));\r\n            }, { once: true });\r\n        }\r\n    }\r\n};\r\nHTMLEDropzoneElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-dropzone\",\r\n        observedAttributes: [\"placeholder\", \"label\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"dragovered\", type: \"string\" },\r\n        { name: \"placeholder\", type: \"string\" },\r\n        { name: \"disabled\", type: \"boolean\" },\r\n        { name: \"multiple\", type: \"boolean\" },\r\n        { name: \"input\", type: \"string\" },\r\n        { name: \"label\", type: \"string\" },\r\n        { name: \"name\", type: \"string\" },\r\n        { name: \"type\", type: \"string\" },\r\n    ])\r\n], HTMLEDropzoneElementBase);\r\nclass DropzoneDataBase {\r\n    constructor(dropzone) {\r\n        this._dropzone = dropzone;\r\n    }\r\n    getData() {\r\n        const data = {};\r\n        const descendantDrozpones = Array.from(this._dropzone.querySelectorAll(\"e-dropzone\"));\r\n        descendantDrozpones.forEach((descendantDrozpone) => {\r\n            const dropzonePathName = this._getDescendantDropzonePathName(descendantDrozpone);\r\n            let descendantDropzoneData = descendantDrozpone.multiple ? descendantDrozpone.draggables.map(draggable => draggable.data) :\r\n                descendantDrozpone.draggables.length > 0 ? descendantDrozpone.draggables[0].data : null;\r\n            setPropertyFromPath(data, dropzonePathName, descendantDropzoneData);\r\n        });\r\n        return data;\r\n    }\r\n    _getDescendantDropzonePathName(dropzone) {\r\n        if (dropzone === this._dropzone) {\r\n            return dropzone.name;\r\n        }\r\n        const parentDropzone = dropzone.parentElement.closest(\"e-dropzone\");\r\n        return `${this._getDescendantDropzonePathName(parentDropzone)}.${dropzone.name}`;\r\n    }\r\n    ;\r\n}\r\nvar DropzoneData = DropzoneDataBase;\r\n//# sourceMappingURL=Dropzone.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, bindShadowRoot, isTagElement } from \"../../HTMLElement\";\r\nlet HTMLEDropzoneInputElementBase = class HTMLEDropzoneInputElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*html*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                }\r\n\r\n                [part~=\"container\"] {\r\n                    position: relative;\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                }\r\n                \r\n                ::slotted(e-dropzone) {\r\n                    flex: auto;\r\n                }\r\n\r\n                ::slotted(input) {\r\n                    position: absolute;\r\n                    flex: none;\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    left: 0;\r\n                    top: 0;\r\n                    opacity: 0;\r\n                    pointer-events: none;\r\n                }\r\n            </style>\r\n            <div part=\"container\">\r\n                <slot name=\"input\"></slot>\r\n                <slot name=\"dropzone\"></slot>\r\n            </div>\r\n            `);\r\n        this.dropzone = null;\r\n        this.input = null;\r\n        this.converter = (dropzone) => dropzone.type;\r\n    }\r\n    connectedCallback() {\r\n        var _a, _b;\r\n        this.tabIndex = this.tabIndex;\r\n        this.addEventListener(\"datachange\", (event) => {\r\n            let target = event.target;\r\n            if (target == this.dropzone && this.dropzone && this.input && this.converter) {\r\n                this.input.value = this.converter(this.dropzone);\r\n                this.input.dispatchEvent(new CustomEvent(\"input\"));\r\n            }\r\n        });\r\n        const dropzoneSlot = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\"slot[name='dropzone']\");\r\n        if (dropzoneSlot) {\r\n            dropzoneSlot.addEventListener(\"slotchange\", () => {\r\n                const dropzone = dropzoneSlot.assignedElements().filter(elem => isTagElement(\"e-dropzone\", elem));\r\n                if (dropzone.length > 0) {\r\n                    this.dropzone = dropzone[0];\r\n                }\r\n            });\r\n        }\r\n        const inputSlot = (_b = this.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector(\"slot[name='input']\");\r\n        if (inputSlot) {\r\n            inputSlot.addEventListener(\"slotchange\", () => {\r\n                const input = inputSlot.assignedElements().filter(elem => isTagElement(\"input\", elem));\r\n                if (input.length > 0) {\r\n                    this.input = input[0];\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\nHTMLEDropzoneInputElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-dropzoneinput\"\r\n    })\r\n], HTMLEDropzoneInputElementBase);\r\n//# sourceMappingURL=DropzoneInput.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../HTMLElement\";\r\nexport { HTMLEHeightSashElementBase };\r\nlet HTMLEHeightSashElementBase = class HTMLEHeightSashElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n\r\n                    height: 4px;\r\n                    background-color: rgb(0, 128, 255);\r\n                    cursor: ns-resize;\r\n\r\n                    transition-property: opacity;\r\n                    transition-delay: 0.2s;\r\n                    transition-duration: 0.2s;\r\n                    transition-timing-function: ease-out;\r\n                    opacity: 0;\r\n                }\r\n\r\n                :host(:active),\r\n                :host(:hover) {\r\n                    opacity: 1;\r\n                }\r\n            </style>\r\n        `);\r\n        this._target = null;\r\n        this._targetStyle = null;\r\n    }\r\n    connectedCallback() {\r\n        let onPointerMove = (event) => {\r\n            if (this._target && this._targetStyle) {\r\n                let directionToTarget = Math.sign(((this.getBoundingClientRect().top + this.getBoundingClientRect().bottom) / 2) -\r\n                    ((this._target.getBoundingClientRect().top + this._target.getBoundingClientRect().bottom) / 2));\r\n                let height = parseFloat(this._targetStyle.getPropertyValue(\"height\"));\r\n                let minHeight = parseFloat(this._targetStyle.getPropertyValue(\"min-height\"));\r\n                let maxHeight = parseFloat(this._targetStyle.getPropertyValue(\"max-height\"));\r\n                let newHeight = Math.trunc(height + directionToTarget * event.movementY);\r\n                if (!isNaN(minHeight)) {\r\n                    newHeight = Math.max(newHeight, minHeight);\r\n                }\r\n                if (!isNaN(maxHeight)) {\r\n                    newHeight = Math.min(newHeight, maxHeight);\r\n                }\r\n                this._target.style.setProperty(\"height\", `${newHeight}px`);\r\n                this.dispatchEvent(new CustomEvent(\"resize\"));\r\n            }\r\n        };\r\n        this.addEventListener(\"pointerdown\", (event) => {\r\n            this.setPointerCapture(event.pointerId);\r\n            this.addEventListener(\"pointermove\", onPointerMove);\r\n            this.addEventListener(\"pointerup\", (event) => {\r\n                this.removeEventListener(\"pointermove\", onPointerMove);\r\n                this.releasePointerCapture(event.pointerId);\r\n            }, { once: true });\r\n        });\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (newValue !== oldValue) {\r\n            switch (name) {\r\n                case \"controls\":\r\n                    if (oldValue !== newValue) {\r\n                        const target = document.getElementById(this.controls);\r\n                        if (target) {\r\n                            this._target = target;\r\n                            this._targetStyle = window.getComputedStyle(target);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};\r\nHTMLEHeightSashElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-hsash\",\r\n        observedAttributes: [\"controls\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"controls\", type: \"string\" },\r\n    ])\r\n], HTMLEHeightSashElementBase);\r\n//# sourceMappingURL=HeightSash.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors } from \"../HTMLElement\";\r\nexport { HTMLEImportElementBase };\r\nlet HTMLEImportElementBase = class HTMLEImportElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n    }\r\n    connectedCallback() {\r\n        const importRequest = async (src) => {\r\n            this.outerHTML = await fetch(src).then((response) => {\r\n                if (response.ok) {\r\n                    return response.text();\r\n                }\r\n                else {\r\n                    throw new Error(response.statusText);\r\n                }\r\n            });\r\n            this.dispatchEvent(new CustomEvent(\"e-load\"));\r\n        };\r\n        if (this.src) {\r\n            importRequest(this.src);\r\n        }\r\n    }\r\n};\r\nHTMLEImportElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-import\"\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"src\", type: \"string\" }\r\n    ])\r\n], HTMLEImportElementBase);\r\n//# sourceMappingURL=Import.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../HTMLElement\";\r\nexport { HTMLELoaderElementBase };\r\nlet HTMLELoaderElementBase = class HTMLELoaderElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: inline-block;\r\n                }\r\n                \r\n                :host([type=\"bar\"]) {\r\n                    display: inline-block;\r\n                    width: 64px;\r\n                }\r\n\r\n                :host([type]:not([type=\"circle\"])) [part~=\"circle\"] {\r\n                    display: none !important;\r\n                }\r\n                \r\n                :host(:not([type=\"bar\"])) [part~=\"bar\"] {\r\n                    display: none !important;\r\n                }\r\n\r\n                [part~=\"circle\"] {\r\n                    position: relative;\r\n                    width: 12px;\r\n                    height: 12px;\r\n                    border-top: 4px solid var(--loader-color, rgb(0, 128, 255));\r\n                    border-right: 4px solid var(--loader-color, rgb(0, 128, 255));\r\n                    border-left: 4px solid transparent;\r\n                    border-bottom: 4px solid transparent;\r\n                    border-radius: 50%;\r\n                    animation-duration: 1s;\r\n                    animation-name: circle;\r\n                    animation-timing-function: linear;\r\n                    animation-iteration-count: infinite;\r\n                }\r\n\r\n                @keyframes circle {\r\n                    0% {\r\n                        transform: rotate(0);\r\n                    }\r\n                    100% {\r\n                        transform: rotate(360deg);\r\n                    }\r\n                }\r\n\r\n                [part~=\"bar\"] {\r\n                    display: block;\r\n                    position: relative;\r\n                    overflow: hidden;\r\n                }\r\n\r\n                [part~=\"slider\"] {\r\n                    position: relative;\r\n                    display: flex;\r\n                    will-change: transform;\r\n                    animation-duration: 1s;\r\n                    animation-name: slider;\r\n                    animation-timing-function: linear;\r\n                    animation-iteration-count: infinite;\r\n                }\r\n\r\n                [part~=\"cursor\"] {\r\n                    position: relative;\r\n                    display: inline-block;\r\n                    width: 32px;\r\n                    height: 4px;\r\n                    background-color: var(--loader-color, rgb(0, 128, 255));\r\n                    border-radius: 4px;\r\n\r\n                    will-change: transform;\r\n                    animation-duration: 1s;\r\n                    animation-name: cursor;\r\n                    animation-timing-function: linear;\r\n                    animation-iteration-count: infinite;\r\n                }\r\n\r\n                @keyframes slider {\r\n                    0% {\r\n                        transform: translateX(0);\r\n                    }\r\n                    100% {\r\n                        transform: translateX(100%);\r\n                    }\r\n                }\r\n\r\n                @keyframes cursor {\r\n                    0% {\r\n                        transform: translateX(-100%);\r\n                    }\r\n                    100% {\r\n                        transform: translateX(100%);\r\n                    }\r\n                }\r\n            </style>\r\n            <div part=\"bar\">\r\n                <div part=\"slider\">\r\n                    <div part=\"cursor\"></div>\r\n                </div>\r\n            </div>\r\n            <div part=\"circle\"></div>\r\n        `);\r\n        this._promise = null;\r\n    }\r\n    set promise(promise) {\r\n        if (promise) {\r\n            promise.finally(() => {\r\n                this.remove();\r\n            });\r\n        }\r\n        this._promise = promise;\r\n    }\r\n    get promise() {\r\n        return this._promise;\r\n    }\r\n};\r\nHTMLELoaderElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-loader\"\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"type\", type: \"string\" }\r\n    ])\r\n], HTMLELoaderElementBase);\r\n//# sourceMappingURL=Loader.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../HTMLElement\";\r\nexport { PaletteElement };\r\nlet PaletteElement = class PaletteElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n                    content: contains;\r\n                }\r\n\r\n               :host #container {\r\n                    display: grid;\r\n                    grid-template-cols: repeat(5, 1fr);\r\n                    grid-auto-rows: 16px;\r\n                }\r\n            </style>\r\n            <div id=\"container\">\r\n            </div>\r\n        `);\r\n    }\r\n    connectedCallback() {\r\n        const colors = this.colors;\r\n        if (colors.length > 0) {\r\n            this.shadowRoot.querySelector('#container').append(...colors.map((color) => {\r\n                const div = document.createElement('div');\r\n                div.setAttribute('style', `background-color: ${color}`);\r\n                return div;\r\n            }));\r\n        }\r\n    }\r\n};\r\nPaletteElement = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: 'e-palette'\r\n    }),\r\n    GenerateAttributeAccessors([{ name: 'colors', type: 'json' }])\r\n], PaletteElement);\r\n//# sourceMappingURL=Palette.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { RegisterCustomHTMLElement, GenerateAttributeAccessors, bindShadowRoot } from \"../HTMLElement\";\r\nexport { HTMLEWidthSashElementBase };\r\nlet HTMLEWidthSashElementBase = class HTMLEWidthSashElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        bindShadowRoot(this, /*template*/ `\r\n            <style>\r\n                :host {\r\n                    display: block;\r\n\r\n                    width: 4px;\r\n                    background-color: rgb(0, 128, 255);\r\n                    cursor: ew-resize;\r\n\r\n                    transition-property: opacity;\r\n                    transition-delay: 0.2s;\r\n                    transition-duration: 0.2s;\r\n                    transition-timing-function: ease-out;\r\n                    opacity: 0;\r\n                }\r\n\r\n                :host(:active),\r\n                :host(:hover) {\r\n                    opacity: 1;\r\n                }\r\n            </style>\r\n        `);\r\n        this._target = null;\r\n        this._targetStyle = null;\r\n    }\r\n    connectedCallback() {\r\n        let onPointerMove = (event) => {\r\n            if (this._target && this._targetStyle) {\r\n                let directionToTarget = Math.sign(((this.getBoundingClientRect().left + this.getBoundingClientRect().right) / 2) -\r\n                    ((this._target.getBoundingClientRect().right + this._target.getBoundingClientRect().right) / 2));\r\n                let width = parseFloat(this._targetStyle.getPropertyValue(\"width\"));\r\n                let minWidth = parseFloat(this._targetStyle.getPropertyValue(\"min-width\"));\r\n                let maxWidth = parseFloat(this._targetStyle.getPropertyValue(\"max-width\"));\r\n                let newWidth = Math.trunc(width + directionToTarget * event.movementX);\r\n                if (!isNaN(minWidth)) {\r\n                    newWidth = Math.max(newWidth, minWidth);\r\n                }\r\n                if (!isNaN(maxWidth)) {\r\n                    newWidth = Math.min(newWidth, maxWidth);\r\n                }\r\n                this._target.style.setProperty(\"width\", `${newWidth}px`);\r\n                this.dispatchEvent(new CustomEvent(\"resize\"));\r\n            }\r\n        };\r\n        this.addEventListener(\"pointerdown\", (event) => {\r\n            this.setPointerCapture(event.pointerId);\r\n            this.addEventListener(\"pointermove\", onPointerMove);\r\n            this.addEventListener(\"pointerup\", (event) => {\r\n                this.removeEventListener(\"pointermove\", onPointerMove);\r\n                this.releasePointerCapture(event.pointerId);\r\n            }, { once: true });\r\n        });\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (newValue !== oldValue) {\r\n            switch (name) {\r\n                case \"controls\":\r\n                    if (oldValue !== newValue) {\r\n                        const target = document.getElementById(this.controls);\r\n                        if (target) {\r\n                            this._target = target;\r\n                            this._targetStyle = window.getComputedStyle(target);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};\r\nHTMLEWidthSashElementBase = __decorate([\r\n    RegisterCustomHTMLElement({\r\n        name: \"e-wsash\",\r\n        observedAttributes: [\"controls\"]\r\n    }),\r\n    GenerateAttributeAccessors([\r\n        { name: \"controls\", type: \"string\" },\r\n    ])\r\n], HTMLEWidthSashElementBase);\r\n//# sourceMappingURL=WidthSash.js.map","import { setFormState } from \"..\";\r\nimport { getFormState } from \"..\";\r\n\r\nconst exportButton = document.getElementById(\"export-button\");\r\nconst loadButton = document.getElementById(\"load-button\");\r\n\r\nexportButton?.addEventListener(\"click\", () => {\r\n    const form = exportButton!.closest(\"form\");\r\n    if (form) {\r\n        let formState = getFormState(form);\r\n        let dataBlob = new Blob([JSON.stringify(formState, null, 4)], {type: \"application/json\"});\r\n        let donwloadAnchor = document.createElement(\"a\");\r\n        donwloadAnchor.href = URL.createObjectURL(dataBlob);\r\n        donwloadAnchor.download = \"config.json\";\r\n        donwloadAnchor.click();\r\n    }\r\n});\r\n\r\nloadButton?.addEventListener(\"click\", () => {\r\n    const form = exportButton!.closest(\"form\");\r\n    if (form) {\r\n        let input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n        input.addEventListener(\"change\", (event) => {\r\n            let file = input.files ? input.files.length > 0 ? input.files.item(0) : null : null;\r\n            if (file) {\r\n                file.text().then((resp) => {\r\n                    let formState = JSON.parse(resp);\r\n                    const form = exportButton!.closest(\"form\");\r\n                    if (form) {\r\n                        setFormState(form, formState);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        input.click();\r\n    }\r\n});","import { isTagElement } from \"../HTMLElement\";\r\nexport { getFormState };\r\nexport { setFormState };\r\n;\r\nconst getFormState = (form) => {\r\n    const elements = Array.from(form.elements);\r\n    let state = {};\r\n    elements.forEach((element) => {\r\n        if (isTagElement(\"input\", element)) {\r\n            if (element.type === \"radio\") {\r\n                if (!(element.name in state)) {\r\n                    state[element.name] = {\r\n                        type: \"radio\",\r\n                        nodes: [{\r\n                                value: element.value,\r\n                                checked: element.checked\r\n                            }]\r\n                    };\r\n                }\r\n                else {\r\n                    const elem = state[element.name];\r\n                    if (\"nodes\" in elem) {\r\n                        elem.nodes.push({\r\n                            value: element.value,\r\n                            checked: element.checked\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else if (element.type === \"checkbox\") {\r\n                state[element.name] = {\r\n                    type: \"checkbox\",\r\n                    checked: element.checked\r\n                };\r\n            }\r\n            else {\r\n                state[element.name] = {\r\n                    value: element.value,\r\n                };\r\n            }\r\n        }\r\n        else if (isTagElement(\"select\", element)) {\r\n            state[element.name] = {\r\n                value: element.value,\r\n            };\r\n        }\r\n        else if (isTagElement(\"textarea\", element)) {\r\n            state[element.name] = {\r\n                value: element.value,\r\n            };\r\n        }\r\n    });\r\n    return state;\r\n};\r\nconst setFormState = (form, state) => {\r\n    const elements = Array.from(form.elements);\r\n    const names = Object.keys(state);\r\n    names.forEach((name) => {\r\n        const elemState = state[name];\r\n        if (\"type\" in elemState) {\r\n            if (elemState.type === \"checkbox\") {\r\n                let element = elements.find((elem) => elem.name === name);\r\n                if (element && isTagElement(\"input\", element)) {\r\n                    element.checked = elemState.checked;\r\n                }\r\n            }\r\n            else if (elemState.type === \"radio\") {\r\n                elemState.nodes.forEach((radioNode) => {\r\n                    let element = elements.find((elem) => elem.name === name && elem.value === radioNode.value);\r\n                    if (element && isTagElement(\"input\", element)) {\r\n                        element.checked = radioNode.checked;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            let element = elements.find((elem) => elem.name === name);\r\n            if (element && (isTagElement(\"input\", element) || isTagElement(\"select\", element) || isTagElement(\"textarea\", element))) {\r\n                element.value = elemState.value;\r\n            }\r\n        }\r\n    });\r\n};\r\n//# sourceMappingURL=Snippets.js.map"],"names":["Key","KeyModifier","MouseButton","tagName","obj","Node","nodeType","ELEMENT_NODE","toLowerCase","RegisterCustomHTMLElement","args","elementCtor","name","observedAttributes","options","Object","defineProperty","prototype","constructor","get","customElements","define","GenerateAttributeAccessors","attributes","forEach","attr","type","this","getAttribute","set","value","setAttribute","removeAttribute","val","JSON","parse","stringify","parseFloat","bindShadowRoot","element","templateContent","root","attachShadow","mode","template","document","createElement","innerHTML","appendChild","content","cloneNode","pointIntersectsWithDOMRect","x","y","rect","left","right","top","bottom","HTMLEMenuElementBase","HTMLElement","super","parentItem","items","_activeIndex","_style","activeIndex","connectedCallback","_a","tabIndex","window","getComputedStyle","slot","shadowRoot","querySelector","addEventListener","assignedElements","filter","elem","item","parentMenu","event","target","includes","trigger","targetIndex","indexOf","reset","focus","focusItemAt","thisIntersectsWithMouse","clientX","clientY","getBoundingClientRect","findIndex","contains","expanded","newTarget","relatedTarget","key","length","activeItem","stopPropagation","parentGroup","group","body","childMenu","attributeChangedCallback","oldValue","newValue","clientWidth","overflowing","index","findItem","predicate","subitems","foundItem","idx","decorators","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","__decorate","HTMLEMenuBarElementBase","activeElement","active","_b","_c","preventDefault","subtree","HTMLEMenuButtonElementBase","menuSlot","menuElem","toggle","capture","alert","disabled","dispatchEvent","CustomEvent","bubbles","labelPart","textContent","HTMLEMenuItemElementBase","command","_hotkey","hotkey","detail","oldHotKey","newHotKey","hotkeyPart","toString","label","inputPart","checked","HTMLEMenuItemGroupElementBase","checkedRadio","PanelElement","getElementById","state","arrow","arr","innerWidth","render","PanelGroupElement","toggler","HTMLEStatusBarElementBase","_selectedItemIndex","once","selectedItemIndex","insertItem","Math","min","max","insertBefore","children","splice","selectItem","findItems","push","clearSelection","selectedItem","HTMLEStatusItemElementBase","_stateMap","stateMap","update","activate","BaseHTMLETabPanelElement","BaseHTMLETabElement","panel","controls","hidden","tab","BaseHTMLETabListElement","tabs","focusTabAt","activeTab","activateTab","thisTab","thisTabIndex","findTab","find","HTMLETreeItemElementBase","parent","indent","_toggleArrow","iconPart","dataset","style","setProperty","deepestVisibleChildItem","previousVisibleItem","indexOfThis","nextVisibleItem","nearestItem","nearestParentItem","indexOfNearest","HTMLETreeElementBase","_activeItem","preventScroll","closestItem","closest","HTMLEBreadcrumbItemElementBase","separatorArrowUrl","HTMLEBreadcrumbTrailElementBase","activateItem","itemIndex","HTMLEDraggableElementBase","draggable","HTMLEDragzoneElementBase","draggables","selectedDraggables","selectDraggable","selected","unselectDraggable","thisSelectedDraggable","dragged","dataTransfer","effectAllowed","setData","id","thisDraggedDraggable","button","shiftKey","ctrlKey","firstIndex","direction","sign","fromIndex","toIndex","startRangeIndex","endRangeIndex","thisDraggable","HTMLEDropzoneElementBase","droptest","appendAreaPart","removeDraggables","dragovered","dropIndex","dragzoneId","getData","dragzone","selectedDraggable","addDraggables","placeholderPart","position","dataTransferSuccess","newDraggables","insertionPosition","multiple","newDraggable","insertAdjacentElement","replaceChild","action","toRemove","atPosition","remove","HTMLEDropzoneInputElementBase","dropzone","input","converter","dropzoneSlot","inputSlot","HTMLEHeightSashElementBase","_target","_targetStyle","onPointerMove","directionToTarget","height","getPropertyValue","minHeight","maxHeight","newHeight","trunc","movementY","isNaN","setPointerCapture","pointerId","removeEventListener","releasePointerCapture","HTMLEImportElementBase","src","async","outerHTML","fetch","then","response","ok","text","Error","statusText","importRequest","HTMLELoaderElementBase","_promise","promise","finally","PaletteElement","colors","append","map","color","div","HTMLEWidthSashElementBase","width","minWidth","maxWidth","newWidth","movementX","exportButton","loadButton","form","formState","elements","Array","from","nodes","getFormState","dataBlob","Blob","donwloadAnchor","href","URL","createObjectURL","download","click","file","files","resp","keys","elemState","radioNode","setFormState"],"sourceRoot":""}