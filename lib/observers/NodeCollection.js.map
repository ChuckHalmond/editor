{"version":3,"file":"observers/NodeCollection.js","mappings":"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","sources":["webpack://editor/webpack/bootstrap","webpack://editor/webpack/runtime/define property getters","webpack://editor/webpack/runtime/hasOwnProperty shorthand","webpack://editor/./src/observers/NodeCollection.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export { NodeCollection };\r\n\r\ninterface NodeCollectionConstructor {\r\n    prototype: NodeCollection;\r\n    new(root: Node, filter: NodeFilter): NodeCollection<Node>;\r\n    new<N extends Node>(root: Node, filter: NodeFilter): NodeCollection<N>;\r\n}\r\n\r\ninterface NodeCollection<N extends Node = Node> {\r\n    readonly root: Node;\r\n    readonly filter: NodeFilter;\r\n    readonly length: number;\r\n    item(index: number): N | undefined;\r\n    values(): IterableIterator<N>;\r\n}\r\n\r\nclass NodeCollectionBase<N extends Node = Node> {\r\n    #root: Node;\r\n    #filter: NodeFilter;\r\n    #observer: MutationObserver;\r\n    #observerTargets: Node[];\r\n\r\n    #items: N[];\r\n\r\n    constructor(root: Node, filter: NodeFilter) {\r\n        this.#root = root;\r\n        this.#filter = filter;\r\n        this.#items = [];\r\n        this.#observer = new MutationObserver(\r\n            this.#handleMutationRecords.bind(this)\r\n        );\r\n        this.#observerTargets = [root];\r\n        this.#observer.observe(root, {\r\n            childList: true\r\n        });\r\n        this.#handleAddedNodes(root.childNodes);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root;\r\n    }\r\n\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    get length() {\r\n        return this.#update(), this.#items.length;\r\n    }\r\n\r\n    item(index: number): N | undefined {\r\n        return this.#update(), this.#items[index];\r\n    }\r\n\r\n    values(): IterableIterator<N> {\r\n        return this.#update(), this.#items.values();\r\n    }\r\n\r\n    #update(): void {\r\n        const records = this.#observer.takeRecords();\r\n        if (records.length > 0) {\r\n            this.#handleMutationRecords(records);\r\n        }\r\n    }\r\n\r\n    #addObserverTargets(targets: Node[]): void {\r\n        const observer = this.#observer;\r\n        observer.disconnect();\r\n        this.#observerTargets.push(...targets);\r\n        this.#observerTargets.forEach((group_i) => {\r\n            observer.observe(group_i, {\r\n                childList: true\r\n            });\r\n        });\r\n    }\r\n\r\n    #removeObserverTargets(targets: Node[]): void {\r\n        const observer = this.#observer;\r\n        observer.disconnect();\r\n        this.#observerTargets = this.#observerTargets.filter(target_i => !targets.includes(target_i));\r\n        this.#observerTargets.forEach((group_i) => {\r\n            observer.observe(group_i, {\r\n                childList: true\r\n            });\r\n        });\r\n    }\r\n\r\n    #handleAddedNodes(nodes: NodeList): void {\r\n        if (nodes.length > 0) {\r\n            const filter = this.#filter;\r\n            const acceptNode = typeof filter === \"function\" ? filter : filter.acceptNode;\r\n            const addedItems = <N[]>[];\r\n            const addedObserverTargets = <Node[]>[];\r\n            nodes.forEach((node: Node) => {\r\n                const acceptNodeResult = acceptNode(node);\r\n                switch (acceptNodeResult) {\r\n                    case NodeFilter.FILTER_ACCEPT: {\r\n                        addedItems.push(<N>node);\r\n                        break;\r\n                    }\r\n                    case NodeFilter.FILTER_SKIP: {\r\n                        addedObserverTargets.push(node);\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            if (addedObserverTargets.length > 0) {\r\n                this.#addObserverTargets(addedObserverTargets);\r\n                addedObserverTargets.forEach((target_i) => {\r\n                    this.#handleAddedNodes(target_i.childNodes);\r\n                });\r\n            }\r\n            if (addedItems.length > 0) {\r\n                addedItems.forEach((item_i) => {\r\n                    const index = this.#items.findIndex(\r\n                        item_i => item_i.compareDocumentPosition(item_i) & Node.DOCUMENT_POSITION_FOLLOWING\r\n                    );\r\n                    this.#items.splice(index > -1 ? index : 0, 0, item_i);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    #handleRemovedNodes(nodes: NodeList): void {\r\n        if (nodes.length > 0) {\r\n            const filter = this.#filter;\r\n            const acceptNode = typeof filter === \"function\" ? filter : filter.acceptNode;\r\n            const removedItems = <N[]>[];\r\n            const removedObserverTargets = <Node[]>[];\r\n            nodes.forEach((node: Node) => {\r\n                const acceptNodeResult = acceptNode(node);\r\n                switch (acceptNodeResult) {\r\n                    case NodeFilter.FILTER_ACCEPT: {\r\n                        removedItems.push(<N>node);\r\n                        break;\r\n                    }\r\n                    case NodeFilter.FILTER_SKIP: {\r\n                        removedObserverTargets.push(node);\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            if (removedObserverTargets.length > 0) {\r\n                this.#removeObserverTargets(removedObserverTargets);\r\n                removedObserverTargets.forEach((target_i) => {\r\n                    this.#handleRemovedNodes(target_i.childNodes);\r\n                });\r\n            }\r\n            if (removedItems.length > 0) {\r\n                this.#items = this.#items.filter(item_i => !removedItems.includes(item_i));\r\n            }\r\n        }\r\n    }\r\n\r\n    #handleMutationRecords(mutationsList: MutationRecord[]) {\r\n        mutationsList.forEach((mutation: MutationRecord) => {\r\n            const {addedNodes, removedNodes} = mutation;\r\n            this.#handleRemovedNodes(removedNodes);\r\n            this.#handleAddedNodes(addedNodes);\r\n        });\r\n    }\r\n}\r\n\r\nvar NodeCollection: NodeCollectionConstructor = NodeCollectionBase;"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","records","this","takeRecords","length","targets","observer","disconnect","push","forEach","group_i","observe","childList","filter","target_i","includes","nodes","acceptNode","addedItems","addedObserverTargets","node","NodeFilter","FILTER_ACCEPT","FILTER_SKIP","childNodes","item_i","index","findIndex","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","splice","removedItems","removedObserverTargets","mutationsList","mutation","addedNodes","removedNodes","NodeCollection","constructor","root","MutationObserver","bind","item","values"],"sourceRoot":""}